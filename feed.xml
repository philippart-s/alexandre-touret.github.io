<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="https://blog.touret.info/feed.xml" rel="self" type="application/atom+xml" /><link href="https://blog.touret.info/" rel="alternate" type="text/html" /><updated>2022-06-12T16:28:11+00:00</updated><id>https://blog.touret.info/feed.xml</id><title type="html">blog.touret.info</title><subtitle>Mon blog personnel. J'y expose mes derniers travaux et ma veille technologique. Au menu en vrac: Java, Kotlin, Maven, Docker, Cloud, Kubernetes, logiciels libres, Debian, Ubuntu, Gnu/Linux, des talks online et présentiels.</subtitle><author><name>Alexandre Touret</name></author><entry><title type="html">Mon Camping des Speakers</title><link href="https://blog.touret.info/2022/06/10/camping-speakers-2022/" rel="alternate" type="text/html" title="Mon Camping des Speakers" /><published>2022-06-10T08:00:00+00:00</published><updated>2022-06-10T08:00:00+00:00</updated><id>https://blog.touret.info/2022/06/10/camping-speakers-2022</id><content type="html" xml:base="https://blog.touret.info/2022/06/10/camping-speakers-2022/">&lt;p&gt;Au début de l’année, j’ai interpelé mes managers: &lt;em&gt;“J’ai été retenu au &lt;a href=&quot;https://camping-speakers.fr/&quot;&gt;Camping des Speakers”&lt;/a&gt;!&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Unanimement, j’ai eu la même réponse: &lt;em&gt;“Le QUOI ???!!!”&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Oui j’en conviens le titre peut paraître à première vue tout sauf sérieux. 
Il faut dire que le lieu est un camping en Bretagne dans le golfe du Morbihan.&lt;/p&gt;

&lt;p&gt;Et pourtant !&lt;/p&gt;

&lt;p&gt;La programmation était de qualité et a tenu ses promesses.&lt;/p&gt;

&lt;p&gt;Je vais essayer de retranscrire quelques sujets qui ont retenu mon attention. J’en oublierai sans doute beaucoup. Je m’en excuse d’avance.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022/06/camping_speakers_2.webp&quot; alt=&quot;bollinette&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Tout d’abord, l’intérêt de cette conférence réside, selon moi, au-delà des talks donnés.&lt;/p&gt;

&lt;p&gt;Le cadre atypique (un camping dans le Morbihan), des conférences &lt;em&gt;slideless&lt;/em&gt; données en extérieur en mode “feu de camp” a eu le même effet, enfin il me semble, sur tous les participantes et participants qu’ils soient speakers ou non.&lt;/p&gt;

&lt;p&gt;Chose originale que j’ai pu constater lors de ces talks, on passait beaucoup de temps à échanger avec les speakers &lt;strong&gt;pendant&lt;/strong&gt; leur présentation. 
C’était génial pour les spectateurs, peut-être un peu moins pour la gestion du timing :).&lt;/p&gt;

&lt;p&gt;Vous l’aurez compris. L’environnement mis en place par les organisateurs permettait de réels échanges… Et on avait le temps de le faire.&lt;/p&gt;

&lt;p&gt;Ensuite, la programmation donnait la part belle à des sujets non techniques.&lt;/p&gt;

&lt;p&gt;Par exemple, j’ai enfin pu voir la conférence de mon ancienne collègue &lt;a href=&quot;https://camping-speakers.fr/sessions/rendez_lagilite_aux_developpeurs/&quot;&gt;Fanny Klauk : “Rendez l’agilité aux développeur(se)s !”&lt;/a&gt; qui, au travers d’une histoire dont est le héros, a mis en évidence les travers des (grosses) organisations. Les solutions sont &lt;em&gt;“naturelles”&lt;/em&gt; dans la théorie, mais permettent de donner plus d’agilité et de sens aux développeurs.&lt;/p&gt;

&lt;p&gt;Un autre sujet “non technique” m’a très intéressé, c’était &lt;a href=&quot;https://camping-speakers.fr/sessions/le_voyage_du_heros/&quot;&gt;“Le voyage du héros de l’IT” d’ Olivier Beautier&lt;/a&gt;. 
Après nous avoir présenté &lt;a href=&quot;https://archive.org/details/leguideduscenari0000vogl&quot;&gt;le guide du scénariste de C. VOGLER&lt;/a&gt;, on a construit une histoire d’une développeuse.
Au travers de cette histoire, on a pu voir entre autres l’importance du mentorat dans notre métier.&lt;/p&gt;

&lt;p&gt;Puis, j’ai vu la conférence &lt;a href=&quot;https://camping-speakers.fr/sessions/java_a_la_vitesse_de_la_lumiere_grace_au_graal/&quot;&gt;d’A. PENA “Java à la vitesse de la lumière grâce au Graal !”&lt;/a&gt;. 
Il a présenté GraalVM, une comparaison avec HotSpot et les perspectives d’évolution de cette JVM. Nul doute que le mode natif sera de plus en plus utilisé dans les prochaines années.&lt;/p&gt;

&lt;p&gt;Ensuite, avec &lt;a href=&quot;https://davidaparicio.github.io/website/fr/event/&quot;&gt;D. APARICIO&lt;/a&gt;, nous avons pu voir les travers d’une (mauvaise) modélisation de données au travers de son retour d’expérience &lt;a href=&quot;https://camping-speakers.fr/sessions/au_secours_jai_un_homonyme/&quot;&gt;“Au secours 😨! J’ai un homonyme !! “&lt;/a&gt;
Il a illustré l’importance de bien modéliser pour ne pas avoir que le nom et prénom comme identifiants dans un système par ex. ainsi que les impacts dans la vie courante.&lt;/p&gt;

&lt;p&gt;Vous l’aurez compris, il y avait beaucoup de conférences intéressantes qui donnaient lieu à des discussions tout aussi passionnantes.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Last but not least&lt;/em&gt;, j’ai eu la chance de présenter les katas d’architecture, comment les mettre en œuvre et quels sont les bénéfices qu’on peut en tirer.
Je tiens à remercier &lt;a href=&quot;https://julientopcu.com/&quot;&gt;Julien TOPCU&lt;/a&gt; et &lt;a href=&quot;https://craftsrecords.org/&quot;&gt;Craft Records&lt;/a&gt; pour l’accompagnement dans la préparation.&lt;/p&gt;

&lt;p&gt;Vous pourrez trouver les slides sur &lt;a href=&quot;https://speakerdeck.com/alexandretouret/ameliorer-les-competences-et-les-infrastructures-avec-les-katas-darchitecture-cc629dfb-87f6-4033-aabd-472472ae5655&quot;&gt;ma page speackerdeck&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pour finir, je conseille cette expérience à toutes les personnes qui veulent apprendre, échanger dans un environnement convivial et zen.&lt;/p&gt;

&lt;p&gt;Si vous n’êtes toujours pas convaincu, sachez qu’il y a également des mashmallows.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Avec cet argument massue, on devrait convaincre les plus sceptiques! ;)&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022/06/camping_speakers_1.webp&quot; alt=&quot;mashmallow&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Merci encore aux organisatrices et organisateurs pour ces deux jours.&lt;/p&gt;

&lt;p&gt;À l’année prochaine !!&lt;/p&gt;</content><author><name>Alexandre Touret</name></author><category term="conference" /><summary type="html">Au début de l’année, j’ai interpelé mes managers: “J’ai été retenu au Camping des Speakers”!</summary></entry><entry><title type="html">Faire des batchs “Cloud Native” dans Kubernetes</title><link href="https://blog.touret.info/2022/05/17/cloud-native-batchs/" rel="alternate" type="text/html" title="Faire des batchs “Cloud Native” dans Kubernetes" /><published>2022-05-17T08:00:00+00:00</published><updated>2022-05-17T08:00:00+00:00</updated><id>https://blog.touret.info/2022/05/17/cloud-native-batchs</id><content type="html" xml:base="https://blog.touret.info/2022/05/17/cloud-native-batchs/">&lt;p&gt;Quand on parle du Cloud et de Kubernetes, généralement on pense aux APIs.
Mais qu’en est-il des batchs?&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022/05/pat-whelen-xSsWBa4rb6E-unsplash.webp&quot; alt=&quot;pat-whelen-xSsWBa4rb6E-unsplash.jpg &quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Oui, depuis plusieurs années, on pensait les éradiquer, mais ils sont encore là et on en a encore besoin pour quelques années encore. 
Ils ont même eu une deuxième jeunesse avec le Big Data et l’explosion des volumétries dans l’IT.&lt;/p&gt;

&lt;p&gt;Je vais essayer de faire un tour d’horizon dans cet article des batchs dans un environnement Cloud et plus particulièrement dans Kubernetes.&lt;/p&gt;

&lt;p&gt;Les exemples présentés dans cet article seront (sans doute) approfondis dans un second article et d’ores et déjà disponibles dans &lt;a href=&quot;https://github.com/alexandre-touret/k8s-batch&quot;&gt;mon GitHub&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;pourquoi-des-batchs-dans-le-cloud&quot;&gt;Pourquoi des batchs dans le Cloud?&lt;/h2&gt;

&lt;p&gt;A ce titre un peu provocateur, j’ajouterais aussi &lt;em&gt;“Pourquoi des batchs dans Kubernetes ?”&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;Oui, aujourd’hui encore,comme j’ai pu l’indiquer précédemment, on doit créer des traitements batchs. A coté des APIs qui représentent le cas d’utilisation “standard” du Cloud, on peut également avoir à traiter des fichiers volumineux allant de plusieurs centaines de Mo à quelques Go.&lt;/p&gt;

&lt;p&gt;Parmi les cas d’utilisation qui nécessitent ce genre de traitement, on pourra avoir:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Les reprises de données (suite à des erreurs ou lors d’une initialisation)&lt;/li&gt;
  &lt;li&gt;Traitement suite à une réception de fichiers (par ex. traitement de fichiers OPENDATA)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si vous êtes déjà passé sur le Cloud pour vos applications transactionnelles, vous vous poserez cette question: &lt;em&gt;Puis-je également déployer des batchs?&lt;/em&gt;&lt;/p&gt;

&lt;h3 id=&quot;pourquoi-se-poser-cette-question&quot;&gt;Pourquoi se poser cette question?&lt;/h3&gt;

&lt;p&gt;Les réponses sont multiples. 
Elles sont tout d’abord liées à une rationalisation des environnements.
Vous avez votre application dans le cloud, votre base de données y est également gérée pour éviter la latence réseau.
Vous devez donc déployer des traitements tiers au plus proche de celle-ci pour vous soustraire des mêmes soucis.&lt;/p&gt;

&lt;p&gt;De plus, l’écosystème lié au cloud offre des technologies et pratiques qui rendent la vie plus simple (si, si, je vous assure) aux développeurs et ops. 
Le déploiement via &lt;a href=&quot;https://en.wikipedia.org/wiki/Infrastructure_as_code&quot;&gt;l’Infra As Code&lt;/a&gt; est un bon exemple : Avoir toute l’infrastructure liée aux traitements batchs et transactionnels versionnées et instantiables à la demande est quelque chose dont on a du mal à se passer!&lt;/p&gt;

&lt;h2 id=&quot;difficultés-par-rapport-aux-apis&quot;&gt;Difficulté(s) par rapport aux APIs&lt;/h2&gt;

&lt;p&gt;Quand on déploie une API dans le cloud, généralement tout va bien. 
On peut voir rapidement que cet environnement convient bien à ce genre de traitements.&lt;/p&gt;

&lt;p&gt;Pour les batchs, c’est une autre affaire!
Selon les sociétés, il peut y avoir un fort historique et beaucoup plus d’exigences que pour les APIs. 
Ces dernières pourront être liées aux performances, à la qualité de service ou plus simplement à l’utilisation.&lt;/p&gt;

&lt;p&gt;Il faut donc, à l’instar de toute architecture, déterminer quel sera l’environnement technique de ce type de traitement. 
Cette fois, on aura à concilier performances, fichiers volumineux et reprises sur erreur.&lt;/p&gt;

&lt;h3 id=&quot;quelques-technologies&quot;&gt;Quelques technologies&lt;/h3&gt;

&lt;p&gt;On pourra retrouver dans notre future architecture les briques suivantes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Une passerelle de fichiers (File Gateway) pour permettre l’envoi des fichiers de manière sécurisée&lt;/li&gt;
  &lt;li&gt;Un stockage objet pour la distribution de fichiers ou l’archivage.&lt;/li&gt;
  &lt;li&gt;Les éléments nécessaires à l’API : bases de données, &lt;a href=&quot;https://en.wikipedia.org/wiki/Hardware_security_module&quot;&gt;HSMs&lt;/a&gt;, Cluster Kubernetes,…&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;modes-de-déclenchement&quot;&gt;Modes de déclenchement&lt;/h2&gt;

&lt;p&gt;Si on regarde de plus près les exigences techniques liées aux cas d’utilisation, on pourrait résumer les différents modes de déclenchement de la manière suivante:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Traitement sur réception de fichiers&lt;/li&gt;
  &lt;li&gt;Traitement déclenché par un ordonnanceur/orchestrateur centralisé (ex. https://dkron.io/) de manière régulière ou non.&lt;/li&gt;
  &lt;li&gt;Traitement déclenché par &lt;a href=&quot;https://en.wikipedia.org/wiki/Cron&quot;&gt;CRON&lt;/a&gt; (qui est un ordonnanceur, mais un peu plus roots)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;J’ai volontairement exclu les traitements sur présence de messages (ex. Kafka). Je les considère plus liés au monde transactionnel.&lt;/p&gt;

&lt;p&gt;Dans les paragraphes suivants, je vais décrire des solutions d’architecture qui permettent de déployer ces traitements dans Kubernetes. J’aborderai sans doute un exemple dans un autre article&lt;/p&gt;

&lt;h2 id=&quot;contraintes&quot;&gt;Contraintes&lt;/h2&gt;

&lt;p&gt;Dès qu’on s’aventure dans ce type de conception, nous aurons, au-delà des &lt;a href=&quot;https://12factor.net/&quot;&gt;12 factors&lt;/a&gt;, les contraintes suivantes à traiter:&lt;/p&gt;

&lt;h3 id=&quot;gestion-des-erreurs-et-indisponibilités&quot;&gt;Gestion des erreurs et indisponibilités&lt;/h3&gt;
&lt;p&gt;Dans un cluster Kubernetes, le crash d’un POD n’est pas rédhibitoire.
Le cluster permet de redémarrer immédiatement une autre instance.&lt;/p&gt;

&lt;p&gt;Pour les APIs, ce n’est pas un problème.
Pour les batchs, c’est une autre paire de manches. 
Quid du crash en plein milieu du traitement d’un fichier?&lt;/p&gt;

&lt;p&gt;Il faut donc penser à ce cas (et à d’autres) et archiver les fichiers pour un éventuel rejeu.&lt;/p&gt;

&lt;h3 id=&quot;données-et-idempotence-des-traitements&quot;&gt;Données et idempotence des traitements&lt;/h3&gt;

&lt;p&gt;Idéalement, les fichiers doivent avoir des lignes indépendantes qui peuvent être insérées individuellement et dans n’importe quel ordre.
Aussi, chaque modification et traitement de données doivent être idempotentes.&lt;/p&gt;

&lt;p&gt;Pourquoi? Pas seulement par ce que c’est sympa et l’état de l’art, mais dans ce nouvel environnement, vous ne pourrez pas forcément garantir l’ordre des traitements.
L’une des solutions potentielles de traitement est de découpler la lecture et l’insertion par du queueing (Artemis, Kafka &lt;em&gt;- oui ce n’est pas du queuing, mais vous avez compris…&lt;/em&gt;). 
Dans ce cas, si votre traitement n’est pas idempotent, vous devrez lutter avec des doublons en base.&lt;/p&gt;

&lt;h3 id=&quot;gestion-des-ressources&quot;&gt;Gestion des ressources&lt;/h3&gt;

&lt;p&gt;Imaginez, vous recevez un fichier de 1Go. 
Vos ressources systèmes sont des PODs avec un 1 Go de RAM.&lt;/p&gt;

&lt;p&gt;Vous voyez le soucis?&lt;/p&gt;

&lt;p&gt;Cet exemple, qui n’est pas trop éloigné de la réalité, mets en évidence l’une des contraintes techniques que vous devrez prendre dès le début de votre conception.&lt;/p&gt;

&lt;p&gt;L’une des solutions serait, par exemple, le traitement quasi systématique du streaming de fichiers et l’obligation d’avoir des fichiers avec des lignes de données indépendantes (c.-à-d. sans avoir à faire de liens inter lignes pendant le traitement).&lt;/p&gt;

&lt;h2 id=&quot;traitement-sur-réception-de-fichiers&quot;&gt;Traitement sur réception de fichiers&lt;/h2&gt;

&lt;p&gt;Dans ce cas, nous avons un processus qui est déclenché lors de la réception d’un fichier. Nous pourrons par exemple avec ce genre d’architecture un fichier qui est envoyé dans espace de stockage objet. Ce dernier est ensuite traité par un programme.
J’ai fait le choix ici de mettre en oeuvre un couplage lâche (on ne se refait pas) entre l’espace de réception de fichiers et le traitement.&lt;/p&gt;

&lt;p&gt;Je traite ici le risque de crash d’un POD en gardant systématiquement les fichiers dans un stockage objet. De cette manière, si le traitement a échoué, un autre POD pourra le télécharger et rejouer le processus batch.&lt;/p&gt;

&lt;p&gt;Ce découplage permet de gérer facilement la scalabilité et les arrêts/relances de PODs.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022/05/batch_evenement-Batch_sur_presence_fichier.svg&quot; alt=&quot;batch_evenement-Batch_sur_presence_fichier&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Dans ce cas, le batch pourra être déployé sous la forme d’un &lt;a href=&quot;https://kubernetes.io/docs/concepts/workloads/controllers/deployment/&quot;&gt;déploiement Kubernetes&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;traitement-déclenché-à-distance-par-ex-par-un-orchestrateur-de-traitements&quot;&gt;Traitement déclenché à distance (par ex. par un orchestrateur de traitements)&lt;/h2&gt;

&lt;p&gt;Maintenant, on va aborder les traitements qui sont lancés par un ordonnanceur tiers ou tout simplement lancé à distance. 
Généralement, dans le monde de l’entreprise, la planification des traitements est centralisée au lieu de laisser de le faire sur chaque machine avec des &lt;a href=&quot;https://en.wikipedia.org/wiki/Cron&quot;&gt;CRON Jobs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Dans ce cas, on a deux manières de procéder:&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Avoir un traitement qui fournit une API permettant de démarrer des traitements et d’avoir leurs statuts.&lt;/li&gt;
  &lt;li&gt;Lancer des jobs.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;avec-une-api&quot;&gt;Avec une API&lt;/h3&gt;

&lt;p&gt;Ici, on conçoit les batchs comme des WEBAPPS qui fournissent des traitements batchs sur demande via des APIs. La contrainte est qu’à l’instar de la solution précédente, le programme tourne toujours et n’est vraiment utile que lorsqu’il est appelé via un endpoint REST.&lt;/p&gt;

&lt;p&gt;Ce modèle de conception peut être utilisé à mon avis si la fréquence est forte et si l’intégration d’un Job Kubernetes est problématique pour vous (voir ci-dessous).&lt;/p&gt;

&lt;p&gt;L’un des avantages que l’on pourra trouver est que le &lt;a href=&quot;https://kubernetes.io/docs/concepts/workloads/controllers/deployment/&quot;&gt;mode de déploiement est assez simple et similaire aux APIs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022/05/traitement_api.svg&quot; alt=&quot;traitement_api&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;avec-des-jobs&quot;&gt;Avec des jobs&lt;/h3&gt;

&lt;p&gt;Si votre ordonnanceur peut exécuter le client kubectl, vous pourrez considérer les &lt;a href=&quot;https://kubernetes.io/docs/concepts/workloads/controllers/job/&quot;&gt;jobs  kubernetes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;En résumé, ils permettent de créer un POD et exécute une action en gérant les erreurs potentielles jusqu’à complétion du traitement.&lt;/p&gt;

&lt;p&gt;Par exemple, voici un job permettant de faire un “Hello World!”:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;batch/v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Job&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hello-world&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;helloworld&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;busybox&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;echo&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;World!&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;restartPolicy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Never&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;backoffLimit&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Une fois déployé avec Helm, vous pouvez les voir avec la commande &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;kubectl get jobs&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;minikube kubectl &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; get &lt;span class=&quot;nb&quot;&gt;jobs
&lt;/span&gt;NAME          COMPLETIONS   DURATION   AGE
hello-world   0/1           25s        25s
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pour les logs et voir le résultat de la commande lancé, cela se passe d’une manière assez habituelle:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;minikube kubectl &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt; logs hello-world-zx4wh
Hello World!
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;traitement-déclenché-par-cron&quot;&gt;Traitement déclenché par CRON&lt;/h2&gt;

&lt;p&gt;Maintenant, on va laisser le soin au Cluster Kubernetes de lancer les différents traitements via une CRON.
Bien que je ne suis pas trop fan de ne pas centraliser l’ordonnancement, cela peut être très utile si votre plateforme est centrée sur Kubernetes.&lt;/p&gt;

&lt;p&gt;Si vous êtes dans ce cas-là, vous pouvez utiliser l’objet &lt;a href=&quot;https://kubernetes.io/docs/concepts/workloads/controllers/cron-jobs/&quot;&gt;CronJob&lt;/a&gt; qui n’est ni plus ni moins qu’un &lt;a href=&quot;https://kubernetes.io/docs/concepts/workloads/controllers/job/&quot;&gt;Job&lt;/a&gt; exécuté de manière périodique.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;batch/v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;CronJob&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hello&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;schedule&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;jobTemplate&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;template&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;containers&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;helloworld-cron&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;busybox&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;echo&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Hello&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;World!&quot;&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;restartPolicy&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;OnFailure&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;panorama-des-solutions-logicielles-possibles&quot;&gt;Panorama des solutions logicielles possibles&lt;/h2&gt;

&lt;p&gt;Une fois qu’on s’est posé toutes (en tout cas certaines) les questions possibles sur nos exigences techniques et la conception, on peut voir quelles sont les technologies possibles pour implémenter des batchs “cloud natifs”.&lt;/p&gt;

&lt;p&gt;Ça ne sera pas une surprise, je vais m’attarder à la plateforme Java. Il est bien évidemment possible d’utiliser d’autres langages et frameworks tels que Go.&lt;/p&gt;

&lt;p&gt;En Java, vous avez le choix entre différents frameworks :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;[Spring avec spring batch et/ou integration&quot;&gt;Spring avec spring batch&lt;/a&gt; et/ou &lt;a href=&quot;https://spring.io/projects/spring-integration&quot;&gt;integration&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://camel.apache.org/&quot;&gt;Camel&lt;/a&gt; qui peut être utilisé avec &lt;a href=&quot;https://camel.apache.org/manual/spring.html&quot;&gt;Spring&lt;/a&gt; ou &lt;a href=&quot;https://quarkus.io/&quot;&gt;Quarkus&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://quarkus.io/&quot;&gt;Quarkus&lt;/a&gt; avec la &lt;a href=&quot;https://github.com/quarkiverse/quarkus-jberet&quot;&gt;JSR 352&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Si vous allez du côté du BigData, vous pouvez aussi envisager d’utiliser des technologies telles qu’&lt;a href=&quot;https://spark.apache.org/&quot;&gt;Apache Spark&lt;/a&gt;.
Ces dernières vous permettront de &lt;a href=&quot;https://spark.apache.org/docs/latest/running-on-kubernetes.html&quot;&gt;découper “plus facilement” vos traitements&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;le-diable-se-cache-dans-les-détails&quot;&gt;Le diable se cache dans les détails&lt;/h2&gt;

&lt;p&gt;Déployer un batch dans Kubernetes peut se faire assez facilement (en développement) une fois qu’on a compris quelques principes. 
Cependant, les soucis peuvent survenir une fois arrivé en production.&lt;/p&gt;

&lt;p&gt;La gestion des erreurs est beaucoup plus complexe que les APIs. Il vous faudra donc définir avec les différentes parties prenantes quel est le meilleur fonctionnement (rejeu) en production. 
Il vous faudra ainsi bien &lt;a href=&quot;https://blog.touret.info/2022/02/09/analyser-les-risques-pour-mieux-definir-une-architecture/&quot;&gt;identifier et évaluer les risques liés à votre application&lt;/a&gt; et voir quelles sont les actions à mener.&lt;/p&gt;

&lt;p&gt;Aussi, si vous devez manipuler des fichiers volumineux, il faudra faire attention au système de fichiers utilisé et ses performances. Habituellement, avec ce type d’architecture, on utilise généralement du SAN. En fonction de vos exigences, un &lt;a href=&quot;https://www.redhat.com/fr/topics/data-storage/file-block-object-storage&quot;&gt;stockage block&lt;/a&gt; pourra être plus adapté.&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Pour conclure cet article, vous aurez compris que le sujet des batchs dans Kubernetes peut s’avérer assez complexe à gérer. 
Au-delà des technologies qui peuvent faire le job (&lt;em&gt;désolé du mauvais jeu de mots&lt;/em&gt;), il vous faudra faire très attention à tout l’environnement dans lequel votre programme devra interagir. Les bases, le réseau, les performances de votre matériel seront des prérequis indispensables.&lt;/p&gt;

&lt;p&gt;Aussi, il vous faudra faire attention à la manière dont sont transmises les données et dont vous les traitez. 
Bref, il faut étudier la solution dans son ensemble du développement à l’exploitation pour s’assurer de ne rien oublier.&lt;/p&gt;

&lt;p&gt;Enfin, cet article n’est bien évidemment pas exhaustif que cela soit sur les solutions ou les contraintes à adresser. 
J’ai néanmoins essayé d’apporter quelques cas concrets et retours d’expérience.&lt;/p&gt;

&lt;p&gt;J’essaierai de détailler un cas concret dans un prochain article.&lt;/p&gt;</content><author><name>Alexandre Touret</name></author><category term="cloud" /><category term="kubernetes" /><category term="batch" /><summary type="html">Quand on parle du Cloud et de Kubernetes, généralement on pense aux APIs. Mais qu’en est-il des batchs?</summary></entry><entry><title type="html">Mieux analyser les risques pour simplifier les architectures (ou pas)</title><link href="https://blog.touret.info/2022/02/09/analyser-les-risques-pour-mieux-definir-une-architecture/" rel="alternate" type="text/html" title="Mieux analyser les risques pour simplifier les architectures (ou pas)" /><published>2022-02-09T08:00:00+00:00</published><updated>2022-02-09T08:00:00+00:00</updated><id>https://blog.touret.info/2022/02/09/analyser-les-risques-pour-mieux-definir-une-architecture</id><content type="html" xml:base="https://blog.touret.info/2022/02/09/analyser-les-risques-pour-mieux-definir-une-architecture/">&lt;p&gt;&lt;img src=&quot;/assets/images/2022/02/architecture.webp&quot; alt=&quot;architecture&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;lanalyse-des-risques-kezako-&quot;&gt;L’analyse des risques: kezako ?&lt;/h2&gt;

&lt;p&gt;Souvent utilisée dans la prise de décision, l’analyse des risques a plusieurs objectifs :&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Permettre de pondérer des risques potentiels&lt;/li&gt;
  &lt;li&gt;Faciliter la prise de décision sur les actions à réaliser pour les prévenir ou tout du moins les atténuer.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Mais d’abord, revenons aux bases. Comment identifier un risque ?&lt;/p&gt;

&lt;p&gt;Selon &lt;a href=&quot;https://fr.wikipedia.org/wiki/Risque&quot;&gt;Wikipedia&lt;/a&gt;, voici la définition:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Le risque est la possibilité de survenue d’un événement indésirable, la probabilité d’occurrence d’un péril probable ou d’un aléa.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Bien évidemment, on a les risques inconnus et ceux qui sont connus. 
Le préalable à toute gestion de risque (tout du moins pour la définition d’architecture) est de capitaliser les connaissances et retours d’expérience qui viennent du terrain.&lt;/p&gt;

&lt;p&gt;On va donc oublier les risques inconnus dans cet article.&lt;/p&gt;

&lt;h3 id=&quot;comment-les-définir-&quot;&gt;Comment les définir ?&lt;/h3&gt;

&lt;p&gt;Tout d’abord, il faut connaître les &lt;a href=&quot;https://sre.google/workbook/implementing-slos/&quot;&gt;SLOs&lt;/a&gt; de la plateforme qu’on souhaite concevoir. Pourquoi ? Pour vérifier si les risques qu’on identifiera plus tard sont pertinents ou tout du moins impactants.&lt;/p&gt;

&lt;p&gt;Par exemple: Une panne électrique sera faiblement impactante pour une application avec une disponibilité &amp;lt; 70%.&lt;/p&gt;

&lt;p&gt;La réalisation des SLIs et SLOs est un préalable pour définir &lt;a href=&quot;https://cloud.google.com/blog/products/management-tools/sre-error-budgets-and-maintenance-windows&quot;&gt;le “budget d’erreur”&lt;/a&gt;. 
Ce dernier nous permettra &lt;em&gt;in fine&lt;/em&gt; de quantifier les risques et de voir si il faut les atténuer.&lt;/p&gt;

&lt;p&gt;Ensuite, pour chaque risque qu’on identifiera (souvent à partir de notre expérience), on tâchera de définir les caractéristiques suivantes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Cause&lt;/li&gt;
  &lt;li&gt;Probabilité&lt;/li&gt;
  &lt;li&gt;Conséquence (gravité)&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;un-exemple&quot;&gt;Un exemple&lt;/h4&gt;

&lt;p&gt;&lt;strong&gt;La base de données est indisponible&lt;/strong&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Cause: Système de fichier plein&lt;/li&gt;
  &lt;li&gt;Probabilité: faible&lt;/li&gt;
  &lt;li&gt;Conséquence: forte (toute la plateforme est HS)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Pour déterminer la cause, il y a plusieurs méthodes, l’une des plus célèbres est celle &lt;a href=&quot;https://fr.wikipedia.org/wiki/Cinq_pourquoi&quot;&gt;des cinq pourquoi&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Elle permet d’accéder à la cause du problème.&lt;/p&gt;

&lt;p&gt;Pour établir la probabilité, les OPS seront vos meilleurs ami.e.s. 
Vous remontrez dans le temps pour déterminer quels ont été les différents incidents.
Pour chacun, vous devrez définir ces trois caractéristiques : cause, probabilité, conséquence.&lt;/p&gt;

&lt;p&gt;A coté de ça, vous aurez à identifier si possible le temps d’indisponibilité du service.&lt;/p&gt;

&lt;h3 id=&quot;synthèse&quot;&gt;Synthèse&lt;/h3&gt;

&lt;p&gt;Une fois ce travail de fourmi réalisé, vous pourrez le synthétiser dans un premier temps avec ce formalisme souvent repris dans la gestion de projet:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2022/02/Risk-Based-Audit_technical.webp&quot; alt=&quot;analyse de risques&quot; /&gt;&lt;/p&gt;

&lt;p&gt;En résumé, les actions qui sont oranges ou rouges doivent être traitées et avoir un plan d’action.&lt;/p&gt;

&lt;p&gt;Prenons la définition d’une plateforme: 
Si votre API doit traiter de manière régulière des PAYLOADs volumineux (bon déjà, la ce n’est pas top).
Le temps de traitement peut être très long et bloquer certaines ressources (ex. des sous transactions).&lt;/p&gt;

&lt;p&gt;Dans ce cas, la probabilité sera à probable et l’impact sera modéré ou majeur. Par conséquent, vous devrez le prendre en compte avec par exemple un &lt;a href=&quot;https://blog.touret.info/2021/07/26/observabilite-et-circuit-breaker-avec-spring/&quot;&gt;circuit breaker&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pour aller encore plus loin, vous pouvez également évaluer les risques en fonction de votre budget d’erreur: Est-ce que l’erreur peut rentrer dans mon budget ou pas? 
Bref, est-ce acceptable?&lt;/p&gt;

&lt;p&gt;Si vous allez plus loin, je vous conseille la formation &lt;a href=&quot;https://www.coursera.org/learn/site-reliability-engineering-slos&quot;&gt;Coursera Site Reliability Engineering: Measuring and Managing Reliability&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;ok-jai-identifié-les-risques-potentiels-quest-ce-que-jen-fait-maintenant&quot;&gt;OK, j’ai identifié les risques potentiels. Qu’est-ce que j’en fait maintenant?&lt;/h2&gt;

&lt;p&gt;C’est là que démarre réellement le travail d’architecture: vous devrez évaluer chaque risque en fonction des exigences fonctionnelles et technique pour savoir si elles valent la peine d’être prises en considération. 
Si vous avez des risques de faible impact, vous pourrez soit les “mettre sous contrôle” pour traiter d’autres problèmes, soit les traiter car ils sont “faciles” à traiter et vous permettront d’agrandir votre “budget d’erreur”. 
Dans ce dernier cas, vous aurez la possibilité de laisser “de coté” d’autres erreurs plus compliquées à traiter car elles rentreront dans votre budget.&lt;/p&gt;

&lt;p&gt;Bref, c’est un vrai travail de fourmi qui se base sur l’expérience du terrain.&lt;/p&gt;

&lt;h2 id=&quot;quid-de-larchitecture&quot;&gt;&lt;em&gt;Quid&lt;/em&gt; de l’architecture?&lt;/h2&gt;

&lt;p&gt;Si vous avez évalué les risques correctement, vous pourrez ne traiter que les risques qui en valent la peine et par conséquent n’ ajouter de la complexité que là ou ça en vaut la peine!&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Oui, ce travail préalable permet de faire simple!&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;un-exemple-concret&quot;&gt;Un exemple concret&lt;/h2&gt;

&lt;p&gt;Si je reprends l’application &lt;a href=&quot;https://github.com/alexandre-touret/bookstore_spring&quot;&gt;bookstore&lt;/a&gt; que j’ai décrite dans &lt;a href=&quot;https://blog.touret.info/2021/07/26/observabilite-et-circuit-breaker-avec-spring/&quot;&gt;un précédent article&lt;/a&gt;:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2021/07/rest-book-architecture.png&quot; alt=&quot;bookstore architecture&quot; /&gt;&lt;/p&gt;

&lt;h3 id=&quot;exigences-techniques&quot;&gt;Exigences techniques&lt;/h3&gt;

&lt;h4 id=&quot;slos--slis&quot;&gt;SLOs / SLIs&lt;/h4&gt;

&lt;p&gt;Pour cet exemple, je ne vais traiter que deux exigences techniques:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;SLO&lt;/th&gt;
      &lt;th&gt;SLI&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;L’API Bookstore doit être disponible 99%&lt;/td&gt;
      &lt;td&gt;Nombre de réponses HTTP = 2XX ou 4XX&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;L’API Bookstore doit répondre en moins de 1 sec&lt;/td&gt;
      &lt;td&gt;Temps de réponse de l’API&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;volumétrie&quot;&gt;Volumétrie&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;100 transactions par seconde (TPS)&lt;/li&gt;
  &lt;li&gt;100 utilisateurs simultanés&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;risques-identifiés&quot;&gt;Risques identifiés&lt;/h3&gt;

&lt;p&gt;Sans aller dans le détail, voici quelques risques que l’on peut identifier de prime abord dans cette architecture:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Indisponibilité du service bookstore&lt;/li&gt;
  &lt;li&gt;Indisponibilité du service booknumber&lt;/li&gt;
  &lt;li&gt;Indisponibilité de la base de données à cause d’une forte volumétrie&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;En vous basant sur l’expérience de vos OPS, vous pourrez également ajouter des risques liés à l’infrastructure (routeurs, DNS, …). 
Je ne vais pas les aborder dans cet article.&lt;/p&gt;

&lt;h3 id=&quot;qualification-des-risques&quot;&gt;Qualification des risques&lt;/h3&gt;

&lt;p&gt;Voici une rapide qualification:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Risques&lt;/th&gt;
      &lt;th&gt;Probabilité&lt;/th&gt;
      &lt;th&gt;Impact&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Indisponibilité du service bookstore&lt;/td&gt;
      &lt;td&gt;Probable&lt;/td&gt;
      &lt;td&gt;Majeur&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Indisponibilité du service booknumber&lt;/td&gt;
      &lt;td&gt;Probable&lt;/td&gt;
      &lt;td&gt;Majeur&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Indisponibilité de la base de données&lt;/td&gt;
      &lt;td&gt;Possible&lt;/td&gt;
      &lt;td&gt;Catastrophique&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Si on se réfère au premier diagramme, il est obligatoire de les prendre en compte.&lt;/p&gt;

&lt;h3 id=&quot;solutions-darchitecture-pour-leur-prise-en-compte&quot;&gt;Solutions d’architecture pour leur prise en compte&lt;/h3&gt;

&lt;p&gt;Une fois les risques identifiés, on peut tout d’abord les confronter à notre budget d’erreur pour valider leur prise en compte dans notre conception.&lt;/p&gt;

&lt;p&gt;Dans notre cas, on va prendre le postulat qu’il faut réellement les prendre en considération et trouver une solution adaptée.&lt;/p&gt;

&lt;p&gt;Voici des exemples de solutions qui permettraient de faire descendre leur impact our leur probabilité.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Risques&lt;/th&gt;
      &lt;th&gt;Probabilité&lt;/th&gt;
      &lt;th&gt;Impact&lt;/th&gt;
      &lt;th&gt;Action/Solutions possibles&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Indisponibilité du service bookstore&lt;/td&gt;
      &lt;td&gt;Possible&lt;/td&gt;
      &lt;td&gt;Majeur&lt;/td&gt;
      &lt;td&gt;Load balancing avec deux instances, Utilisation Kubernetes,.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Indisponibilité du service booknumber&lt;/td&gt;
      &lt;td&gt;Possible&lt;/td&gt;
      &lt;td&gt;Majeur&lt;/td&gt;
      &lt;td&gt;Sur le service book-number:&lt;br /&gt;Load balancing avec deux instances, Utilisation Kubernetes,..&lt;br /&gt;&lt;br /&gt;Sur le service bookstore:&lt;br /&gt;&lt;br /&gt;Mettre en place un circuit breaker basé sur le timeout d’appel &lt;br /&gt;vers le service book-number pour garantir la SLO&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Indisponibilité de la base de données&lt;/td&gt;
      &lt;td&gt;Possible&lt;/td&gt;
      &lt;td&gt;Catastrophique&lt;/td&gt;
      &lt;td&gt;- Réalisation d’un benchmark pour s’assurer qu’une instance est suffisante.&lt;br /&gt;&lt;br /&gt;- Sinon mise en place mécanisme HA ou changement de technologie&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;L’analyse des risques n’est pas récente et n’a pas été inventée par le monde de l’informatique.
Elle est d’abord apparue dans la gestion de projets et fait désormais partie prenante de la définition d’architectures (enfin ça commence…).
Il ne faut pas la voir seulement pour un outil de “GO-NO GO” de réunion de cellule de crise mais comme une aide à la décision pour la conception des systèmes.&lt;/p&gt;

&lt;p&gt;Il a toute sa place à coté des différentes caractéristiques que vous devrez prendre en compte ( sécurité, modularité, …).
J’ai essayé de décrire comment les identifier et trouver une solution adaptée dans l’exemple.
Bien évidemment, il n’est pas complet. 
Je pense néanmoins qu’il permet d’avoir une idée sur le sujet.&lt;/p&gt;

&lt;p&gt;Le principal avantage d’utiliser à la fois les SLOs/SLIs, le budget d’erreur et l’analyse des risques est de &lt;strong&gt;n’apporter de la complexité que là où c’est nécessaire&lt;/strong&gt;.&lt;/p&gt;

&lt;p&gt;Pour certains un benchmark sera souvent utile pour confirmer votre décision.&lt;/p&gt;

&lt;p&gt;Si vous voulez aller plus loin, je vous conseille dans un premier temps de lire &lt;a href=&quot;https://fundamentalsofsoftwarearchitecture.com/&quot;&gt;“Fundamentals of Software Architecture”&lt;/a&gt;. 
Ce sujet y est abordé.&lt;/p&gt;

&lt;p&gt;Enfin,si ce sujet vous intéresse, vous pouvez vous projeter au délà de l’informatique en lisant les analyses de risques réalisées par &lt;a href=&quot;https://www.economie.gouv.fr/files/files/directions_services/tracfin/analyse-nationale-des-risques-lcb-ft-en-France-septembre-2019.pdf&quot;&gt;le Ministère des finances&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Bonne lecture ;-)&lt;/p&gt;</content><author><name>Alexandre Touret</name></author><category term="architecture" /><summary type="html"></summary></entry><entry><title type="html">Mettre en oeuvre des Github Actions utiles pour un site hébergé sur Github pages</title><link href="https://blog.touret.info/2021/12/19/mettre-en-oeuvre-github-actions-utiles-pour-un-site-heberge-sur-github-io/" rel="alternate" type="text/html" title="Mettre en oeuvre des Github Actions utiles pour un site hébergé sur Github pages" /><published>2021-12-19T12:00:00+00:00</published><updated>2021-12-19T12:00:00+00:00</updated><id>https://blog.touret.info/2021/12/19/mettre-en-oeuvre-github-actions-utiles-pour-un-site-heberge-sur-github-io</id><content type="html" xml:base="https://blog.touret.info/2021/12/19/mettre-en-oeuvre-github-actions-utiles-pour-un-site-heberge-sur-github-io/">&lt;p&gt;&lt;img src=&quot;/assets/images/2021/12/github-1.jpg&quot; alt=&quot;github&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;pourquoi-mettre-en-oeuvre-des-github-actions-&quot;&gt;Pourquoi mettre en oeuvre des GITHUB ACTIONS ?&lt;/h2&gt;

&lt;p&gt;Comme j’ai pu l’expliquer dans &lt;a href=&quot;https://blog.touret.info/2021/12/06/migrer-un-blog-wordpress-vers-github-io/&quot;&gt;mon précédent article&lt;/a&gt;, je suis passé de &lt;a href=&quot;wordpress.com/&quot;&gt;Wordpress&lt;/a&gt; à &lt;a href=&quot;https://pages.github.com/&quot;&gt;GITHUB Pages&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Une fois le site déployé une première fois, on voit qu’on a perdu pas mal d’automatisations qui sont réalisées par défaut dans Wordpress. Par exemple, vous devez construire votre site, publier des nouveaux articles et vérifier que tout est OK.&lt;/p&gt;

&lt;p&gt;J’ai donc mis en oeuvre des GITHUB ACTIONS pour automatiser le plus d’actions possibles et me passer de tâches manuelles souvent rébarbatives.&lt;/p&gt;

&lt;p&gt;Si vous souhaitez découvrir les GITHUB ACTIONS, je vous conseille &lt;a href=&quot;https://github.com/features/actions&quot;&gt;ce site&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;construction-du-site-et-déploiement&quot;&gt;Construction du site et déploiement&lt;/h2&gt;

&lt;p&gt;Dès qu’on touche à Jekyll et à l’hébergement sur Github Pages, on tombe sur certaines actions à réaliser telles que celle-ci:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll build 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;J’ai donc réalisé les workflows suivants:&lt;/p&gt;

&lt;h3 id=&quot;pour-une-feature-branch-dans-une-pull-request&quot;&gt;Pour une feature branch (dans une Pull Request)&lt;/h3&gt;
&lt;p&gt;Je construis le site sans le déployer pour vérifier que la construction est correcte.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Build Jekyll site&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;branches-ignore&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;(1)&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;- main&lt;/span&gt;
      &lt;span class=&quot;s&quot;&gt;- gh-pages&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;jekyll&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# can change this to ubuntu-latest if you prefer&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;📂 setup (2)&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v2&lt;/span&gt;

        &lt;span class=&quot;c1&quot;&gt;# include the lines below if you are using jekyll-last-modified-at&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# or if you would otherwise need to fetch the full commit history&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# however this may be very slow for large repositories!&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# with:&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;# fetch-depth: '0'&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;💎 setup ruby  (3)&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ruby/setup-ruby@v1&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;ruby-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2.6&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# can change this to 2.7 or whatever version you prefer&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;bundler-cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
      
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;🔨 install dependencies &amp;amp; build site (4)&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bundle exec jekyll build&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Voila ce que ce workflow réalise:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Il est exécuté à chaque push excepté sur les branches main et gh-pages. Ce sont les branches que j’utilise pour le déploiement du site après la validation d’une pull request.&lt;/li&gt;
  &lt;li&gt;Checkout du projet&lt;/li&gt;
  &lt;li&gt;Initialisation de Ruby et téléchargement des dépendances comme le ferait la commande &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bundle install&lt;/code&gt;.&lt;/li&gt;
  &lt;li&gt;Construction du site&lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;pour-la-branche-main&quot;&gt;Pour la branche main&lt;/h3&gt;

&lt;p&gt;Une fois que la pull request est validée, le code est poussé dans la branche main. On y exécute le code suivant:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Build and deploy Jekyll site to GitHub Pages&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;push&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;branches&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;jekyll&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# can change this to ubuntu-latest if you prefer&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;📂 setup&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;💎 setup ruby&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ruby/setup-ruby@v1&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;ruby-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;2.6&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# can change this to 2.7 or whatever version you prefer&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;bundler-cache&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
      
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;🔨 install dependencies &amp;amp; build site&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;bundle exec jekyll build&lt;/span&gt;

      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;🚀 deploy&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;peaceiris/actions-gh-pages@v3&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;github_token&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;$&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;publish_dir&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;./_site&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ce dernier reprend le code du workflow suivant ( oui, j’aurai pu faire des workflows réutilisables… ) et ajoute l’étape de déploiement.
Le code généré sera copié dans la branche &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gh-pages&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;publication-dun-article&quot;&gt;Publication d’un article&lt;/h2&gt;

&lt;p&gt;Pour rédiger un article, j’utilise le mécanisme de feature branch et pull request. Pour automatiser la publication, le nommage des articles avec la date etc, j’ai mis en oeuvre le workflow suivant:&lt;/p&gt;

&lt;p&gt;Je rédige les articles (comme celui-ci) et les positionne dans le répertoire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_drafts&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-R&lt;/span&gt; _drafts                                                                                               
quelques-github-actions-utiles-pour-un-site-jekyll-heberge-sur-github-io.md
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;J’associe un &lt;a href=&quot;https://docs.github.com/en/issues/using-labels-and-milestones-to-track-work/about-milestones&quot;&gt;milestone&lt;/a&gt; à la &lt;a href=&quot;https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/about-pull-requests&quot;&gt;pull request&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Dès que ces derniers sont terminés, le workflow décrit ci-dessous est exécuté. 
Il permet, via un script python de:&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Identifier les articles dans le répertoire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_drafts&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Vérifier que la date de publication spéficié dans l’en-tête est antérieure à la date courante (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;now()&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;Copier le fichier dans le répertoire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_posts&lt;/code&gt; en le renommant avec la date en préfixe.&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Publish Drafts&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;(1)&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;milestone&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;types&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;closed&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;workflow_dispatch&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/checkout@v2&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;ref&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;main (2)&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;📂 setup python&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;actions/setup-python@v2&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;python-version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;3.7.7'&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;# install the python version needed&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;💎 install python packages (3)&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;python -m pip install --upgrade pip &lt;/span&gt;
        &lt;span class=&quot;no&quot;&gt;  &lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;🔨 execute py script  (4)&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;python publish_drafts.py&lt;/span&gt;
          
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;🔨 commit files (5)&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;|&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;if git ls-files -o  --exclude-standard; then&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;git config --local user.email &quot;action@github.com&quot;&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;git config --local user.name &quot;GitHub Action&quot;&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;git add -A&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;git commit -m &quot;publish drafts&quot; -a&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;git push origin main&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;else&lt;/span&gt;
          &lt;span class=&quot;s&quot;&gt;echo &quot;No file to publish&quot;&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;fi&lt;/span&gt;
        &lt;span class=&quot;no&quot;&gt;  &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Explication:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Déclenchement manuel ou à la clôture d’un milestone&lt;/li&gt;
  &lt;li&gt;Récupération de la branche &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;main&lt;/code&gt;&lt;/li&gt;
  &lt;li&gt;Installation de packages python&lt;/li&gt;
  &lt;li&gt;Exécution du &lt;a href=&quot;https://github.com/alexandre-touret/alexandre-touret.github.io/blob/main/publish_drafts.py&quot;&gt;script python réalisé pour l’occasion&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Commit et push&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Une fois ce workflow réalisé, le workflow vu précédemment est automatiquement lancé et le site est généré une nouvelle fois. Bon ça fait deux constructions, mais au vu du temps pris, c’est négligeable.&lt;/p&gt;

&lt;h2 id=&quot;uptime&quot;&gt;Uptime&lt;/h2&gt;

&lt;p&gt;J’aurai pu utiliser un tiers service tel que &lt;a href=&quot;https://uptimerobot.com/&quot;&gt;uptime robot&lt;/a&gt;. 
Pour mon besoin, j’ai préféré opter pour un appel régulier du site et une vérification du code HTTP (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;200&lt;/code&gt;).&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# This is a basic workflow to help you get started with Actions&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Uptime Monitoring&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;schedule&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;(1)&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;- cron&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*/60&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;*'&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;jobs&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;ping_site&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;runs-on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ubuntu-latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Ping the site&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;steps&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Check the site&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;hello&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;uses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;srt32/uptime@master&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;url-to-hit&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;https://blog.touret.info/robots.txt&quot;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;(2)&lt;/span&gt;
        &lt;span class=&quot;na&quot;&gt;expected-statuses&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;200,301&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Explications&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Déclenchement toutes les heures de ce workflow&lt;/li&gt;
  &lt;li&gt;J’ai utilisé une GITHUB ACTION existante qui ping une URL et vérifie le code retour. Dans mon cas, j’ai utilisé l’URL du fichier &lt;a href=&quot;https://developers.google.com/search/docs/advanced/robots/intro?hl=fr&quot;&gt;robots.txt&lt;/a&gt; et je vérifie le code retour.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;
&lt;p&gt;J’ai réussi à plus ou moins automatiser tout le cycle de construction d’articles. 
C’est encore perfectible et loin de certaines fonctionnalités de Wordpress, mais je n’en ai pas réellement besoin.&lt;/p&gt;

&lt;p&gt;Si vous souhaitez réutiliser ces workflows et les intégrer dans sites, vous pouvez les récupérer &lt;a href=&quot;https://github.com/alexandre-touret/alexandre-touret.github.io&quot;&gt;sur ce repo GITHUB&lt;/a&gt;.&lt;/p&gt;</content><author><name>Alexandre Touret</name></author><category term="github" /><category term="jekyll" /><category term="github-actions" /><category term="planetlibre" /><summary type="html"></summary></entry><entry><title type="html">Migrer son blog Wordpress vers GitHub</title><link href="https://blog.touret.info/2021/12/06/migrer-un-blog-wordpress-vers-github-io/" rel="alternate" type="text/html" title="Migrer son blog Wordpress vers GitHub" /><published>2021-12-06T10:00:00+00:00</published><updated>2021-12-06T10:00:00+00:00</updated><id>https://blog.touret.info/2021/12/06/migrer-un-blog-wordpress-vers-github-io</id><content type="html" xml:base="https://blog.touret.info/2021/12/06/migrer-un-blog-wordpress-vers-github-io/">&lt;p&gt;L’idée me trottait dans la tête depuis quelques mois environ: migrer mon blog de Wordpress vers un site basé sur Jekyll et hébergé directement sur Github.
La date de renouvellement de ma souscription Wordpress arrivant à terme, je me suis décidé à franchir le pas.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2021/12/sebastien-goldberg-AW5MxlFDVzc-unsplash.jpg&quot; alt=&quot;migration&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;l-hébergement-de-sites-web-sur-github&quot;&gt;L’ hébergement de sites web sur Github&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.github.com/en/pages/setting-up-a-github-pages-site-with-jekyll&quot;&gt;Github permet via son service Github Pages d’héberger des sites statiques&lt;/a&gt; (c.-à-d. pas de base de données derrière) en permettant d’associer son nom de domaine. 
Le certificat est automatiquement généré.&lt;/p&gt;

&lt;p&gt;Pour avoir un look un peu sympa, j’ai donc mis en oeuvre les outils suivants:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com&quot;&gt;Jekyll&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://mmistakes.github.io/minimal-mistakes/&quot;&gt;Minimal Mistakes&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://jekyllrb.com/docs/continuous-integration/github-actions/&quot;&gt;Github Actions pour construire le site&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.markdownguide.org/&quot;&gt;Markdown&lt;/a&gt; pour écrire les différents articles&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;démarrer-avec-minimal-mistakes&quot;&gt;Démarrer avec Minimal Mistakes&lt;/h2&gt;

&lt;p&gt;Je vous conseille d’aller sur &lt;a href=&quot;https://mmistakes.github.io/minimal-mistakes/&quot;&gt;ce site&lt;/a&gt;.
Tout est bien détaillé est c’est réalisable en quelques minutes seulement.&lt;/p&gt;

&lt;h2 id=&quot;migration-des-données&quot;&gt;Migration des données&lt;/h2&gt;

&lt;p&gt;Sans surprise, c’est la partie la moins drôle. Il faut en résumé:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Exporter les données si vous êtes hébergé sur wordpress.com&lt;/li&gt;
  &lt;li&gt;Les ré-importer dans une instance locale&lt;/li&gt;
  &lt;li&gt;Les exporter au format Jekyll&lt;/li&gt;
  &lt;li&gt;Copier le contenu généré dans un nouveau site&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;exporter-les-données&quot;&gt;Exporter les données&lt;/h3&gt;

&lt;p&gt;Afin d’exporter les données et de les transformer, il faut d’abord exporter les données (articles + médias) de votre site Wordpress&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2021/12/Screenshot_2021-12-03_12-01-31.png&quot; alt=&quot;wordpress_export&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Vous obtiendrez deux archives: la première pour les articles, la deuxième pour les médias.&lt;/p&gt;

&lt;p&gt;Création d’une instance Wordpress pour convertir les données au format Jekyll&lt;/p&gt;

&lt;h3 id=&quot;importer-les-données&quot;&gt;Importer les données&lt;/h3&gt;

&lt;p&gt;Pour faire simple, j’utilise &lt;a href=&quot;https://docs.docker.com/samples/wordpress/&quot;&gt;Docker pour monter une architecture Wordpress sur mon poste&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Il faut pour ça créer un fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;docker-compose.yml&lt;/code&gt; et insérer le contenu suivant:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;3.9&quot;&lt;/span&gt;
    
&lt;span class=&quot;na&quot;&gt;services&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;db&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;mysql:5.7&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;db_data:/var/lib/mysql&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;always&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;MYSQL_ROOT_PASSWORD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;somewordpress&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;MYSQL_DATABASE&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;MYSQL_USER&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;MYSQL_PASSWORD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress&lt;/span&gt;
    
  &lt;span class=&quot;na&quot;&gt;wordpress&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;depends_on&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;db&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;image&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress:latest&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress_data:/var/www/html&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;ports&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;8000:80&quot;&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;restart&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;always&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;environment&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;WORDPRESS_DB_HOST&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;db:3306&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;WORDPRESS_DB_USER&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;WORDPRESS_DB_PASSWORD&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;WORDPRESS_DB_NAME&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;wordpress&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;db_data&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{}&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;wordpress_data&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;{}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ensuite, vous aurez à lancer la commande suivante:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;docker-compose up
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Une fois lancé, vous aurez à une instance Wordpress via cette URL : http://localhost:8000&lt;/p&gt;

&lt;p&gt;Ensuite, il faut installer l’extension &lt;a href=&quot;https://wordpress.org/plugins/jekyll-exporter/&quot;&gt;jekyll-exporter&lt;/a&gt;.
La procédure peut prendre un peu de temps.&lt;/p&gt;

&lt;p&gt;Une fois effectuée, vous aurez une archive ZIP contenant un site Jekyll avec les images et articles associés.&lt;/p&gt;

&lt;h2 id=&quot;création-du-site&quot;&gt;Création du site&lt;/h2&gt;

&lt;p&gt;En attendant que ça se termine, j’ai crée &lt;a href=&quot;https://github.com/mmistakes/mm-github-pages-starter/generate&quot;&gt;un site jekyll avec le starter du thème minimal mistakes&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;J’ai ensuite copié les articles (répertoire &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/_posts&lt;/code&gt;) et images (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/assets/img&lt;/code&gt;).
Au premier lancement des commandes suivantes:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bundle &lt;span class=&quot;nb&quot;&gt;install
&lt;/span&gt;bundle &lt;span class=&quot;nb&quot;&gt;exec &lt;/span&gt;jekyll serve
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;J’ai eu quelques erreurs. J’ai donc eu à nettoyer les fichiers via des recherche/remplace dans un éditeur&lt;/p&gt;

&lt;p&gt;Par exemple, j’ai supprimé les références &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;author&lt;/code&gt; et &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;layout&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;author&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;admin&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;layout&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;post&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;J’ai également ajouté pour certains articles une image pour le teaser&lt;/p&gt;

&lt;p&gt;Exemple:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;header&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;teaser&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/assets/images/2021/07/rest-book-architecture.png&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;url-des-pages-et-compatibilité-wordpress--jekyll&quot;&gt;URL des pages et compatibilité Wordpress &amp;lt;&amp;gt; Jekyll&lt;/h3&gt;

&lt;p&gt;Pour me faciliter la vie dans les URLS et liens en tout genre, j’ai gardé le format des URLS de Wordpress.
Pour que ça soit le format par défaut de Jekyll, il faut modifier le paramètre &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;permalink&lt;/code&gt; dans le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_config.yml&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;permalink&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/:year/:month/:day/:title/&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;flux-rss-pour-un-tag-donné&quot;&gt;Flux RSS pour un tag donné&lt;/h3&gt;

&lt;p&gt;J’utilisais une petite spécificité de Wordpress: la création d’un flux RSS pour un tag donné. 
Pour le mettre en place dans Jekyll, il faut configurer le plugin &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jekyll-feed&lt;/code&gt; avec les propriété suivantes:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;feed&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;tags&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;et-maintenant-&quot;&gt;Et maintenant ?&lt;/h2&gt;

&lt;p&gt;J’ai sans doute oublié quelques renommages/suppressions réalisés ici et là.
Néanmoins, le principal est évoqué dans cet article.&lt;/p&gt;

&lt;p&gt;Il ne vous reste plus qu’à éplucher la documentation du thème et de jekyll pour finaliser l’ installation de votre nouveau site.&lt;/p&gt;</content><author><name>Alexandre Touret</name></author><category term="github" /><category term="wordpress" /><category term="planetlibre" /><summary type="html">L’idée me trottait dans la tête depuis quelques mois environ: migrer mon blog de Wordpress vers un site basé sur Jekyll et hébergé directement sur Github. La date de renouvellement de ma souscription Wordpress arrivant à terme, je me suis décidé à franchir le pas.</summary></entry><entry><title type="html">Observabilité et Circuit Breaker avec Spring</title><link href="https://blog.touret.info/2021/07/26/observabilite-et-circuit-breaker-avec-spring/" rel="alternate" type="text/html" title="Observabilité et Circuit Breaker avec Spring" /><published>2021-07-26T09:53:49+00:00</published><updated>2021-07-26T09:53:49+00:00</updated><id>https://blog.touret.info/2021/07/26/observabilite-et-circuit-breaker-avec-spring</id><content type="html" xml:base="https://blog.touret.info/2021/07/26/observabilite-et-circuit-breaker-avec-spring/">&lt;p&gt;Il y a quelques mois déjà, je discutais avec &lt;a href=&quot;https://jefrajames.fr/&quot;&gt;un collègue&lt;/a&gt; d’ observabilité, &lt;a href=&quot;https://github.com/opentracing-contrib/java-spring-cloud&quot;&gt;opentracing&lt;/a&gt;, … avec &lt;a href=&quot;http://quarkus.io/&quot;&gt;Quarkus&lt;/a&gt;. On est tombé sur &lt;a href=&quot;https://github.com/agoncal/agoncal-fascicle-quarkus-pract&quot;&gt;un super exemple réalisé par Antonio Concalves&lt;/a&gt;. Ce projet démontre les capacités de Quarkus sur les sujets suivants:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Circuit Breaker&lt;/li&gt;
  &lt;li&gt;Observabilité&lt;/li&gt;
  &lt;li&gt;OpenTracing&lt;/li&gt;
  &lt;li&gt;Tests&lt;/li&gt;
  &lt;li&gt;…&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Et la on peut se demander quid de &lt;a href=&quot;http://spring.io/&quot;&gt;Spring&lt;/a&gt;? Je me doutais que ces fonctionnalités étaient soient disponibles par défaut soient facilement intégrables vu la richesse de l’écosystème.&lt;/p&gt;

&lt;p&gt;J’ai donc réalisé un clone de &lt;a href=&quot;https://github.com/alexandre-touret/bookstore_spring&quot;&gt;ce projet basé sur Spring Boot/Cloud&lt;/a&gt;. Je ne vais pas détailler plus que ça les différentes fonctionnalités, vous pouvez vous référer au fichier &lt;a href=&quot;https://github.com/alexandre-touret/bookstore_spring#readme&quot;&gt;README&lt;/a&gt;. Il est suffisamment détaillé pour que vous puissiez exécuter et les mettre en œuvre.&lt;/p&gt;

&lt;h2 id=&quot;architecture-de-lapplication&quot;&gt;Architecture de l’application&lt;/h2&gt;

&lt;p&gt;Vous trouverez ci-dessous un schéma d’architecture de l’application &lt;a href=&quot;https://c4model.com/&quot;&gt;au format C4&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2021/07/rest-book-architecture.png&quot; alt=&quot;maintenance&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;circuit-breaker&quot;&gt;Circuit Breaker&lt;/h2&gt;

&lt;p&gt;Lors des appels entre le &lt;a href=&quot;https://github.com/alexandre-touret/bookstore_spring/blob/main/rest-book/src/main/java/info/touret/bookstore/spring/book/service/BookService.java&quot;&gt;bookstore&lt;/a&gt; et le &lt;a href=&quot;https://github.com/alexandre-touret/bookstore_spring/blob/main/rest-number/src/main/java/info/touret/bookstore/spring/number/controller/BookNumbersController.java&quot;&gt;booknumberservice&lt;/a&gt;, il peut être intéressant d’ implémenter un &lt;a href=&quot;https://martinfowler.com/bliki/CircuitBreaker.html&quot;&gt;circuit breaker&lt;/a&gt; pour pallier aux indisponibilités de ce dernier.&lt;br /&gt;
Avec Spring, on peut utiliser &lt;a href=&quot;https://github.com/resilience4j/resilience4j&quot;&gt;Resilience4J&lt;/a&gt; au travers de &lt;a href=&quot;https://spring.io/projects/spring-cloud&quot;&gt;Spring Cloud&lt;/a&gt;. Tout ceci se fait de manière programmatique&lt;/p&gt;

&lt;p&gt;Il faut tout d’abord &lt;a href=&quot;https://github.com/alexandre-touret/bookstore_spring/blob/main/rest-book/src/main/java/info/touret/bookstore/spring/book/BookConfiguration.java&quot;&gt;configurer les circuit breakers au travers d’une classe Configuration&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Bean&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Customizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Resilience4JCircuitBreakerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createDefaultCustomizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;configureDefault&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Resilience4JConfigBuilder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;timeLimiterConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;TimeLimiterConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;custom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;timeoutDuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ofSeconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timeoutInSec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;circuitBreakerConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;CircuitBreakerConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ofDefaults&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Creates a circuit breaker customizer applying a timeout specified by the &amp;lt;code&amp;gt;booknumbers.api.timeout_sec&amp;lt;/code&amp;gt; property.
     * This customizer could be reached using this id: &amp;lt;code&amp;gt;slowNumbers&amp;lt;/code&amp;gt;
     * @return the circuit breaker customizer to apply when calling to numbers api
     */&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Bean&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Customizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Resilience4JCircuitBreakerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createSlowNumbersAPICallCustomizer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;factory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;configure&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;circuitBreakerConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;CircuitBreakerConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ofDefaults&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;timeLimiterConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;TimeLimiterConfig&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;custom&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;timeoutDuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Duration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ofSeconds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;timeoutInSec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()),&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;slowNumbers&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Grâce à ces instanciations, on référence les différents &lt;a href=&quot;https://martinfowler.com/bliki/CircuitBreaker.html&quot;&gt;circuit breakers&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Maintenant, on peut les utiliser dans le code de la manière suivante:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;registerBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@Valid&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Book&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;circuitBreakerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;create&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;slowNumbers&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;persistBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt;
                &lt;span class=&quot;n&quot;&gt;throwable&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;fallbackPersistBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;

        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;bookRepository&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;save&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;book&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Maintenant, il ne reste plus qu’à créer &lt;a href=&quot;https://github.com/alexandre-touret/bookstore_spring/blob/main/rest-book/src/main/java/info/touret/bookstore/spring/book/service/BookService.java&quot;&gt;une méthode de « fallback » utilisée si un service est indisponible&lt;/a&gt;. Cette dernière nous permettra, par exemple, de mettre le payload dans un fichier pour futur traitement batch.&lt;/p&gt;

&lt;h2 id=&quot;observabilité&quot;&gt;Observabilité&lt;/h2&gt;

&lt;p&gt;L’observabilité est sans contexte la pierre angulaire (oui, rien que ça…) de toute application cloud native. Sans ça, pas de scalabilité, de redémarrage automatique,etc.&lt;br /&gt;
Les architectures de ce type d’applications sont &lt;a href=&quot;https://en.wikipedia.org/wiki/Idempotence&quot;&gt;idempotentes&lt;/a&gt;. On a donc besoin d’avoir toutes les informations à notre disposition. Heureusement, &lt;a href=&quot;https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/#actuator&quot;&gt;Spring fournit par le biais d’ Actuator&lt;/a&gt; toutes les informations nécessaires. Ces dernières pourront soit être utilisées par &lt;a href=&quot;https://kubernetes.io/&quot;&gt;Kubernetes&lt;/a&gt; (ex. le &lt;a href=&quot;https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/&quot;&gt;livenessProbe&lt;/a&gt;) ou agrégées dans une base de données &lt;a href=&quot;https://prometheus.io/docs/prometheus/latest/storage/&quot;&gt;Prometheus&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pour activer certaines métriques d’&lt;a href=&quot;https://docs.spring.io/spring-boot/docs/current/reference/html/actuator.html&quot;&gt;actuator&lt;/a&gt;, il suffit de :&lt;/p&gt;

&lt;p&gt;Ajouter la/les dépendance(s)&lt;/p&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;dependencies&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[...]&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;implementation&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'org.springframework.boot:spring-boot-starter-actuator'&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;implementation&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'io.micrometer:micrometer-registry-prometheus'&lt;/span&gt;
     &lt;span class=&quot;o&quot;&gt;[...]&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Spécifier la configuration adéquate:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nl&quot;&gt;management:&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;endpoints:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;enabled&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;by&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;web:&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;exposure:&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;include:&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'*'&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;jmx:&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;exposure:&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;include:&lt;/span&gt; &lt;span class=&quot;sc&quot;&gt;'*'&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;endpoint:&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;health:&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;show&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;details:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;always&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;enabled:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;probes:&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;enabled:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;shutdown:&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;enabled:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;prometheus:&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;enabled:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;metrics:&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;enabled:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;health:&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;livenessstate:&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;enabled:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;readinessstate:&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;enabled:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;datasource:&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;enabled:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;metrics:&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;web:&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;client:&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;request:&lt;/span&gt;
          &lt;span class=&quot;nl&quot;&gt;autotime:&lt;/span&gt;
            &lt;span class=&quot;nl&quot;&gt;enabled:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;opentracing&quot;&gt;OpenTracing&lt;/h2&gt;

&lt;p&gt;Sur les applications distribuées, il peut s’avérer compliqué de concentrer les logs et de les corréler. Certes, avec un ID de corrélation, on peut avoir certaines informations. Cependant, il faut que les logs soient bien positionnées dans le code. On peut également passer à travers de certaines informations (ex. connexion aux bases de données, temps d’exécution des APIS,…). Je ne vous parle pas des soucis de volumétrie engendrées par des index Elasticsearch/Splunk sur des applications à forte volumétrie.&lt;/p&gt;

&lt;p&gt;Depuis quelques temps, le &lt;a href=&quot;https://www.cncf.io/&quot;&gt;CNCF&lt;/a&gt; propose un projet (encore en incubation) : &lt;a href=&quot;https://opentracing.io/&quot;&gt;OpenTracing&lt;/a&gt;. Ce dernier fait désormais partie d’&lt;a href=&quot;https://opentelemetry.io/&quot;&gt;OpenTelemetry&lt;/a&gt;.&lt;br /&gt;
Grâce à cet librairie, nous allons pouvoir tracer toutes les transactions de notre application microservices et pouvoir réaliser une corrélation « out of the box » grâce à l’intégration avec &lt;a href=&quot;https://www.jaegertracing.io/&quot;&gt;Jaeger&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Pour activer la fonctionnalité il suffit d’ajouter la dépendance au classpath:&lt;/p&gt;

&lt;div class=&quot;language-groovy highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;implementation&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'io.opentracing.contrib:opentracing-spring-jaeger-cloud-starter:3.3.1'&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;et de configurer l’URL de Jaeger dans l’application&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Default values&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;opentracing&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;jaeger&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;udp-sender&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;host&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;localhost&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;port&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;6831&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;enabled&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Une fois l’application reconstruite et redémarrée, vous pourrez visualiser les transactions dans JAEGER:&lt;figure class=&quot;wp-block-gallery columns-2 is-cropped&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2021/07/screenshot-2021-07-26-at-11-38-31-jaeger-ui-1568x532.png&quot; alt=&quot;jaeger1&quot; /&gt;
&lt;img src=&quot;/assets/images/2021/07/screenshot-2021-07-26-at-11-38-15-jaeger-ui-1568x759.png&quot; alt=&quot;jaeger2&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Je ne vais pas exposer l’implémentation des tests unitaires et d’intégration. Si vous voulez voir comment j’ai réussi à mocker simplement les appels REST à une API distante, vous pouvez regarder &lt;a href=&quot;https://github.com/alexandre-touret/bookstore_spring/blob/main/rest-book/src/test/java/info/touret/bookstore/spring/book/controller/BookControllerIT.java&quot;&gt;cette classe&lt;/a&gt; pour voir une utilisation du &lt;a href=&quot;https://www.baeldung.com/mockserver&quot;&gt;MockServer&lt;/a&gt;.&lt;br /&gt;
Aussi, n’hésitez pas à cloner, tester ce projet et me donner votre retour. J’essaierai de le mettre à jour au fur et à mesure de mes découvertes (par ex. OpenTelemetry).&lt;/p&gt;</content><author><name>Alexandre Touret</name></author><category term="github" /><category term="java" /><category term="observability" /><category term="planetlibre" /><category term="spring" /><summary type="html">Il y a quelques mois déjà, je discutais avec un collègue d’ observabilité, opentracing, … avec Quarkus. On est tombé sur un super exemple réalisé par Antonio Concalves. Ce projet démontre les capacités de Quarkus sur les sujets suivants:</summary></entry><entry><title type="html">Ajouter un mode « maintenance » à votre API grâce à Spring boot</title><link href="https://blog.touret.info/2021/06/10/ajouter-un-mode-maintenance-a-votre-api-grace-a-spring-boot/" rel="alternate" type="text/html" title="Ajouter un mode « maintenance » à votre API grâce à Spring boot" /><published>2021-06-10T15:01:20+00:00</published><updated>2021-06-10T15:01:20+00:00</updated><id>https://blog.touret.info/2021/06/10/ajouter-un-mode-maintenance-a-votre-api-grace-a-spring-boot</id><content type="html" xml:base="https://blog.touret.info/2021/06/10/ajouter-un-mode-maintenance-a-votre-api-grace-a-spring-boot/">&lt;p&gt;&lt;img src=&quot;/assets/images/2021/06/pexels-photo-257736.jpeg&quot; alt=&quot;maintenance&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Quand vous avez une API, et a fortiori une application, il peut être parfois nécessaire de passer l’application en mode « maintenance ».&lt;br /&gt;Pour certaines applications il est parfois inutile de le traiter au niveau applicatif, car ça peut être pris géré par certaines couches de sécurité ou frontaux web par ex. (&lt;a href=&quot;https://httpd.apache.org/&quot;&gt;Apache HTTPD&lt;/a&gt;, &lt;a href=&quot;https://fr.wikipedia.org/wiki/Web_application_firewall&quot;&gt;WAF&lt;/a&gt;)&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://kubernetes.io/fr/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/&quot;&gt;Kubernetes a introduit ( ou popularisé ) les notions de « probes »&lt;/a&gt; et plus particulièrement les &lt;a href=&quot;https://kubernetes.io/fr/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/&quot;&gt;livenessProbes&lt;/a&gt; et &lt;a href=&quot;https://kubernetes.io/fr/docs/tasks/configure-pod-container/configure-liveness-readiness-startup-probes/&quot;&gt;readinessProbes&lt;/a&gt;.&lt;br /&gt;
Le premier nous indique si l’application est en état de fonctionnement, le second nous permet de savoir si cette dernière est apte à recevoir des requêtes (ex. lors d’un démarrage).&lt;/p&gt;

&lt;p&gt;Je vais exposer dans cet article comment utiliser au mieux ces probes et &lt;a href=&quot;https://docs.spring.io/spring-boot/docs/current/reference/htmlsingle/&quot;&gt;les APIs SPRING&lt;/a&gt; pour intégrer dans une API un mode « maintenance »&lt;/p&gt;

&lt;h2 id=&quot;stack-utilisée&quot;&gt;Stack utilisée&lt;/h2&gt;

&lt;p&gt;Dans l’exemple que j’ai développé, j’ai pu utiliser les briques suivantes:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;OpenJDK 11.0.10&lt;/li&gt;
  &lt;li&gt;Spring Boot 2.5.0 (web, actuator)&lt;/li&gt;
  &lt;li&gt;Maven 3.8.1&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Bref, rien de neuf à l’horizon 🙂&lt;/p&gt;

&lt;h2 id=&quot;configuration-de-spring-actuator&quot;&gt;Configuration de Spring Actuator&lt;/h2&gt;

&lt;p&gt;Pour activer les différents probes, vous devez activer &lt;a href=&quot;https://docs.spring.io/spring-boot/docs/2.4.0/actuator-api/&quot;&gt;Actuator&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Dans le fichier pom.xml, vous devez ajouter le starter correspondant:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.springframework.boot&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
	&lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;spring-boot-starter-actuator&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Puis vous devez déclarer ces differentes &lt;a href=&quot;https://github.com/alexandre-touret/maintenance-mode/blob/main/src/main/resources/application.properties&quot;&gt;propriétés&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-ini highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;py&quot;&gt;management.endpoints.enabled-by-default&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;management.health.livenessstate.enabled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;management.health.readinessstate.enabled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;management.endpoint.health.show-details&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;always&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;management.endpoint.health.probes.enabled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;py&quot;&gt;management.endpoint.health.enabled&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Après avoir redémarré votre application, vous pourrez connaître son statut grâce à un appel HTTP&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; http://localhost:8080/actuator/health/readiness 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;comment-récupérer-le-statut-des-probes&quot;&gt;Comment récupérer le statut des probes?&lt;/h2&gt;

&lt;p&gt;Avec Spring, vous pouvez modifier les différents statuts avec les classes &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/ApplicationEventPublisher.html&quot;&gt;ApplicationEventPublisher&lt;/a&gt; et &lt;a href=&quot;https://docs.spring.io/spring-boot/docs/2.4.4/api/org/springframework/boot/availability/ApplicationAvailability.html&quot;&gt;ApplicationAvailability&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Par exemple, pour connaître le statut &lt;a href=&quot;https://docs.spring.io/spring-boot/docs/2.5.0-SNAPSHOT/api/org/springframework/boot/availability/ReadinessState.html&quot;&gt;Readiness&lt;/a&gt; vous pouvez exécuter le code suivant:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@ApiResponses&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
 &lt;span class=&quot;nd&quot;&gt;@ApiResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;responseCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;200&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Checks if the application in under maitenance&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)})&lt;/span&gt;
 &lt;span class=&quot;nd&quot;&gt;@GetMapping&lt;/span&gt;
 &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MaintenanceDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;retreiveInMaintenance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kt&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;lastChangeEvent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;availability&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLastChangeEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ReadinessState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ok&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MaintenanceDTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lastChangeEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ReadinessState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;REFUSING_TRAFFIC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Date&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lastChangeEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getTimestamp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;())));&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Et la modification ?&lt;/p&gt;

&lt;p&gt;Grâce à la même API, on peut également modifier ce statut dans via du code:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@ApiResponses&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;value&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@ApiResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;responseCode&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;204&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Put the app under maitenance&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)})&lt;/span&gt;
&lt;span class=&quot;nd&quot;&gt;@PutMapping&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Void&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;initInMaintenance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nd&quot;&gt;@NotNull&lt;/span&gt; &lt;span class=&quot;nd&quot;&gt;@RequestBody&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;String&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inMaintenance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nc&quot;&gt;AvailabilityChangeEvent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;publish&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;eventPublisher&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Boolean&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;valueOf&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inMaintenance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;?&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ReadinessState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;REFUSING_TRAFFIC&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ReadinessState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;ACCEPTING_TRAFFIC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ResponseEntity&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;noContent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;filtre-les-appels-et-indiquer-que-lapplication-est-en-maintenance&quot;&gt;Filtre les appels et indiquer que l’application est en maintenance&lt;/h2&gt;

&lt;p&gt;Maintenant qu’on a codé les mécanismes de récupération du statut de l’application et de la mise en maintenance, on peut ajouter le mécanisme permettant de traiter ou non les appels entrants.&lt;br /&gt;
Pour ça on va utiliser un &lt;a href=&quot;http://blog.paumard.org/cours/servlet/chap04-filtre-mise-en-place.html&quot;&gt;bon vieux filtre servlet&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Ce dernier aura la tâche de laisser passer les requêtes entrantes si l’application n’est pas en maintenance et de déclencher une &lt;a href=&quot;https://github.com/alexandre-touret/maintenance-mode/blob/main/src/main/java/info/touret/spring/maintenancemode/exception/MaintenanceException.java&quot;&gt;MaintenanceException&lt;/a&gt; le cas échéant qui sera traité par &lt;a href=&quot;https://github.com/alexandre-touret/maintenance-mode/blob/main/src/main/java/info/touret/spring/maintenancemode/GlobalExceptionHandler.java&quot;&gt;la gestion d’erreur globale de l’application&lt;/a&gt; ( traité via un &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/bind/annotation/RestControllerAdvice.html&quot;&gt;@RestControllerAdvice&lt;/a&gt;).&lt;/p&gt;

&lt;p&gt;Pour que l’exception soit bien traitée par ce mécanisme, il faut le déclencher via le &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/web/servlet/HandlerExceptionResolver.html&quot;&gt;HandlerExceptionResolver&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Component&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;CheckMaintenanceFilter&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;implements&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Filter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Logger&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;LOGGER&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LoggerFactory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getLogger&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;CheckMaintenanceFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ApplicationAvailability&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;availability&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;nd&quot;&gt;@Autowired&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Qualifier&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;handlerExceptionResolver&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;private&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;HandlerExceptionResolver&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exceptionHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Checks if the application is under maintenance. If it is and if the requested URI is not '/api/maintenance', it throws a &amp;lt;code&amp;gt;MaintenanceException&amp;lt;/code&amp;gt;
     *
     * @param request
     * @param response
     * @param chain
     * @throws IOException
     * @throws ServletException
     * @throws info.touret.spring.maintenancemode.exception.MaintenanceException the application is under maintenance
     */&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@Override&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;doFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ServletRequest&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServletResponse&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;FilterChain&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;throws&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;IOException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ServletException&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;availability&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getReadinessState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ReadinessState&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;REFUSING_TRAFFIC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;!((&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpServletRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRequestURI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;equals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;no&quot;&gt;API_MAINTENANCE_URI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;no&quot;&gt;LOGGER&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;warn&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Message handled during maintenance [{}]&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpServletRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRequestURI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;());&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;exceptionHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;resolveException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpServletRequest&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpServletResponse&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;MaintenanceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Service currently in maintenance&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;chain&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;doFilter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Enfin, voici la gestion des erreurs de l’API:&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@RestControllerAdvice&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;GlobalExceptionHandler&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Indicates that the application is on maintenance
     */&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@ResponseStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;I_AM_A_TEAPOT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@ExceptionHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;MaintenanceException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;APIError&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;maintenance&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;APIError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;I_AM_A_TEAPOT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Service currently in maintenance&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;

    &lt;span class=&quot;cm&quot;&gt;/**
     * Any other exception
     */&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@ResponseStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;INTERNAL_SERVER_ERROR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;@ExceptionHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;RuntimeException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
    &lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;APIError&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;anyException&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;APIError&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;HttpStatus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;INTERNAL_SERVER_ERROR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;An unexpected server error occured&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;);&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;On a pu voir comment intéragir simplement avec les APIS SPRING pour gérer le statut de l’application pour répondre à cette question :Est-elle disponible ou non?&lt;br /&gt;
Bien évidemment, selon le contexte, il conviendra d’ajouter un peu de sécurité pour que cette API ne soit pas disponible à tout le monde 🙂&lt;/p&gt;

&lt;p&gt;Le code exposé ici est disponible sur &lt;a href=&quot;https://github.com/alexandre-touret/maintenance-mode/&quot;&gt;Github&lt;/a&gt;. Le &lt;a href=&quot;https://github.com/alexandre-touret/maintenance-mode/blob/main/README.md&quot;&gt;Readme&lt;/a&gt; est suffisamment détaillé pour que vous puissiez tester et réutiliser le code.&lt;/p&gt;</content><author><name>Alexandre Touret</name></author><category term="actuator" /><category term="observability" /><category term="planetlibre" /><category term="spring" /><category term="springboot" /><summary type="html"></summary></entry><entry><title type="html">Utiliser GPG dans WSL2</title><link href="https://blog.touret.info/2021/05/03/utiliser-gpg-dans-wsl2/" rel="alternate" type="text/html" title="Utiliser GPG dans WSL2" /><published>2021-05-03T18:47:11+00:00</published><updated>2021-05-03T18:47:11+00:00</updated><id>https://blog.touret.info/2021/05/03/utiliser-gpg-dans-wsl2</id><content type="html" xml:base="https://blog.touret.info/2021/05/03/utiliser-gpg-dans-wsl2/">&lt;p&gt;&lt;img src=&quot;/assets/images/2021/05/pexels-photo-261621.jpeg&quot; alt=&quot;pexel photo&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Pourquoi utiliser &lt;a href=&quot;https://fr.wikipedia.org/wiki/GNU_Privacy_Guard&quot;&gt;GPG&lt;/a&gt; ? Par exemple &lt;a href=&quot;https://blog.touret.info/2019/08/09/verifier-les-commit-git-avec-gpg/&quot;&gt;pour signer les commits GIT&lt;/a&gt;. Maintenant comment faire quand on est sous Windows 10 et qu’on souhaite utiliser &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/wsl/install-win10&quot;&gt;le sous système Linux (WSL2)&lt;/a&gt;?&lt;/p&gt;

&lt;p&gt;Sous GNU/Linux, l’installation et l’utilisation avec git est très simple. Avec &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/wsl/install-win10&quot;&gt;WSL2&lt;/a&gt;,… il faut un peu d’huile de coude 🙂&lt;/p&gt;

&lt;p&gt;Je vais tâcher de décrire dans cet article les différentes manipulations nécessaires pour:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Importer une clé GPG existante&lt;/li&gt;
  &lt;li&gt;Utiliser GPG pour signer mes commits dans WSL2&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;importer-une-clé-gpg-existante&quot;&gt;Importer une clé GPG existante&lt;/h2&gt;

&lt;h3 id=&quot;export-de-la-clé-gpg&quot;&gt;Export de la clé GPG&lt;/h3&gt;

&lt;h4 id=&quot;identifier-l-id-de-la-clé&quot;&gt;Identifier l’ ID de la clé&lt;/h4&gt;

&lt;p&gt;Lancez la commande suivante:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gpg &lt;span class=&quot;nt&quot;&gt;--export&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; public.key
gpg &lt;span class=&quot;nt&quot;&gt;--export-secret-key&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;ID&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; private.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;import&quot;&gt;Import&lt;/h3&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gpg &lt;span class=&quot;nt&quot;&gt;--import&lt;/span&gt; public.key
gpg &lt;span class=&quot;nt&quot;&gt;--import&lt;/span&gt; private.key
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;vérification&quot;&gt;Vérification&lt;/h3&gt;

&lt;p&gt;Pour vérifier que la clé est bien configurée, vous pouvez lancer la commande suivante:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gpg &lt;span class=&quot;nt&quot;&gt;--list-secret-keys&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--keyid-format&lt;/span&gt; LONG   alexandre@....
sec   rsa4096/CLE_ID 2019-12-20 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;SC]
      &lt;span class=&quot;k&quot;&gt;********************&lt;/span&gt;
uid                &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;  ultime &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Alexandre &amp;lt;alexandre@....&amp;gt;
ssb   rsa4096/SUB 2019-12-20 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;E]

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Si la clé n’est pas reconnue comme ultime ou comme de confiance, il faudra l’éditer:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gpg &lt;span class=&quot;nt&quot;&gt;--edit-key&lt;/span&gt; CLE_ID
Please decide how far you trust this user to correctly verify other &lt;span class=&quot;nb&quot;&gt;users&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;' keys
(by looking at passports, checking fingerprints from different sources, etc.)
  1 = I don'&lt;/span&gt;t know or won&lt;span class=&quot;s1&quot;&gt;'t say
  2 = I do NOT trust
  3 = I trust marginally
  4 = I trust fully
  5 = I trust ultimately
  m = back to the main menu
Your decision? 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Si vous ne voulez pas trop vous compliquer, je vous conseille de répondre &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;configuration-gpg-pour-wsl2&quot;&gt;Configuration GPG pour WSL2&lt;/h2&gt;

&lt;p&gt;Avant de configurer l’agent GPG, vous pouvez vous référer &lt;a href=&quot;https://blog.touret.info/2019/08/09/verifier-les-commit-git-avec-gpg/&quot;&gt;à cet article&lt;/a&gt; pour configurer GIT et GPG. La configuration est équivalente.&lt;/p&gt;

&lt;p&gt;Ensuite, créez le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.gnupg/gpg.conf&lt;/code&gt; avec le contenu suivant:&lt;/p&gt;

&lt;div class=&quot;language-conf highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# Uncomment within config (or add this line)
# This tells gpg to use the gpg-agent
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;use&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;agent&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# Set the default key
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CLE_ID&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Puis créez le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.gnupg/gpg-agent.conf&lt;/code&gt; avec le contenu ci-dessous:&lt;/p&gt;

&lt;div class=&quot;language-conf highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;cache&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;ttl&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;34560000&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;max&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;cache&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;ttl&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;34560000&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pinentry&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;program&lt;/span&gt; /&lt;span class=&quot;n&quot;&gt;usr&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;bin&lt;/span&gt;/&lt;span class=&quot;n&quot;&gt;pinentry&lt;/span&gt;-&lt;span class=&quot;n&quot;&gt;curses&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Le cache ici est défini en secondes. Il est mis ici à 400 jours.&lt;/p&gt;

&lt;p&gt;Ce dernier fichier fait référence au programme &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pinentry&lt;/code&gt;. Vous pouvez vérifier sa présence grâce à la commande:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; /usr/bin/pinentry-curses 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Si vous ne l’avez pas, vous pouvez l’installer grâce à la commande suivante:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;pinentry-curses
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Maintenant, on peut configurer l’environnement BASH en modifiant le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;~/.bashrc&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# enable GPG signing&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GPG_TTY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tty&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; ~/.gnupg/S.gpg-agent &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then
    &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;eval&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt; gpg-agent &lt;span class=&quot;nt&quot;&gt;--daemon&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--options&lt;/span&gt; ~/.gnupg/gpg-agent.conf &lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;fi
&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GPG_AGENT_INFO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;HOME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/.gnupg/S.gpg-agent:0:1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Redémarrez ensuite WSL2 pour que ça soit pris en compte.&lt;/p&gt;

&lt;p&gt;A la première utilisation de GPG ( par ex. lors d’un commit, vous aurez une interface &lt;a href=&quot;https://fr.wikipedia.org/wiki/Ncurses&quot;&gt;Ncurses&lt;/a&gt; qui apparaîtra dans votre prompt WSL2. Vous aurez à renseigner le mot de passe de votre clé.&lt;/p&gt;</content><author><name>Alexandre Touret</name></author><category term="git" /><category term="gpg" /><category term="planetlibre" /><category term="wsl2" /><summary type="html"></summary></entry><entry><title type="html">Installer Ubuntu 20.04 LTS sur un DELL Inspiron 13 5000</title><link href="https://blog.touret.info/2021/04/02/installer-ubuntu-20-04-lts-sur-un-dell-inspiron-13-5000/" rel="alternate" type="text/html" title="Installer Ubuntu 20.04 LTS sur un DELL Inspiron 13 5000" /><published>2021-04-02T19:45:43+00:00</published><updated>2021-04-02T19:45:43+00:00</updated><id>https://blog.touret.info/2021/04/02/installer-ubuntu-20-04-lts-sur-un-dell-inspiron-13-5000</id><content type="html" xml:base="https://blog.touret.info/2021/04/02/installer-ubuntu-20-04-lts-sur-un-dell-inspiron-13-5000/">&lt;p&gt;&lt;a href=&quot;https://blog.touret.info/2020/03/23/installer-ubuntu-18-04-lts-sur-un-dell-inspiron-14-3493/&quot;&gt;Les confinements se suivent et se ressemblent&lt;/a&gt;. Me voilà à installer Ubuntu sur un nouvel ordinateur.&lt;/p&gt;

&lt;p&gt;A l’instar de l’ancien laptop que j’ai acheté pour mon aînée, j’ai acheté un DELL pour ma deuxième fille.J’ai opté pour un DELL Inspiron 5301.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2021/04/dell-inspiron-13-5301-argent-01.jpg&quot; alt=&quot;dell inspiron&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A l’instar de mon autre laptop, je j’ai pas pris de risques. J’ai opté pour un DELL qui est pleinement compatible avec Ubuntu. Oui j’aurai pu installer un ordinateur avec Ubuntu pré-installé, mais je n’ai pas eu le temps de faire un choix « serein ».&lt;/p&gt;

&lt;h2 id=&quot;configuration-du-bios&quot;&gt;Configuration du BIOS&lt;/h2&gt;

&lt;p&gt;Voila les paramètres que j’ai appliqué:&lt;/p&gt;

&lt;p&gt;Dans le menu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;Storage&quot;&lt;/code&gt; puis &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;SATA Operation&quot;&lt;/code&gt;: vous devez sélectionner AHCI au lieu de RAID.&lt;br /&gt;
Dans le menu &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;Change boot mode settings &amp;gt;UEFI Boot Mode&quot;&lt;/code&gt; , vous devez désactiver le &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Secure Boot&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Une fois réalisé, vous pouvez redémarrer en appuyant sur la touche F12. Si vous n’arrivez pas à revenir sur le BIOS pour indiquer de booter sur votre clé USB, vous obtiendrez un écran d’erreur Windows dû à la configuration AHCI. Personnellement, en redémarrant une ou deux fois, j’ai obtenu un écran de démarrage avancé qui m’a permis de sélectionner le périphérique (ma clé USB) sur lequel démarrer.&lt;/p&gt;

&lt;p&gt;Maintenant vous pouvez accéder à l’installeur Ubuntu et profiter.&lt;/p&gt;

&lt;h2 id=&quot;installation&quot;&gt;Installation&lt;/h2&gt;

&lt;p&gt;J’ai eu plusieurs fois des popup « erreur rencontré ». Ce n’était pas bloquant. J’ai continué.&lt;/p&gt;

&lt;p&gt;Tout s’est déroulé sans encombre. &lt;a href=&quot;https://certification.ubuntu.com/hardware/202007-28039&quot;&gt;Le matériel est très bien reconnu&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Les seuls logiciels que j’ai installé sont pour l’instant : VLC, Minecraft ( obligatoire dans la famille ) et Chromium.&lt;/p&gt;</content><author><name>Alexandre Touret</name></author><category term="dell" /><category term="planetlibre" /><category term="ubuntu" /><summary type="html">Les confinements se suivent et se ressemblent. Me voilà à installer Ubuntu sur un nouvel ordinateur.</summary></entry><entry><title type="html">Gérer « efficacement » les fichiers de configuration dans les charts HELM</title><link href="https://blog.touret.info/2021/01/09/gerer-efficacement-les-fichiers-de-configuration-dans-les-charts-helm/" rel="alternate" type="text/html" title="Gérer « efficacement » les fichiers de configuration dans les charts HELM" /><published>2021-01-09T14:21:28+00:00</published><updated>2021-01-09T14:21:28+00:00</updated><id>https://blog.touret.info/2021/01/09/gerer-efficacement-les-fichiers-de-configuration-dans-les-charts-helm</id><content type="html" xml:base="https://blog.touret.info/2021/01/09/gerer-efficacement-les-fichiers-de-configuration-dans-les-charts-helm/">&lt;p class=&quot;has-drop-cap&quot;&gt;
  Dès qu'on veut déployer des environnements &lt;a href=&quot;https://kubernetes.io/&quot;&gt;Kubernetes&lt;/a&gt;, &lt;a href=&quot;https://helm.sh/&quot;&gt;Helm &lt;/a&gt;devient une des solutions à considérer.&lt;br /&gt;Le déploiement des objets standards tels que &lt;code&gt;deployment&lt;/code&gt;, &lt;code&gt;autoscaler &lt;/code&gt;et autres se fait aisément car ces derniers ne changent pas d'un environnement à l'autre. Généralement on déploie la même infrastructure sur tous les environnements du développement à la production.
&lt;/p&gt;

&lt;p&gt;Bien évidemment on pourra limiter la taille des replicas sur l’environnement de développement par exemple mais au fond, le contenu des charts sera identique. Une des difficultés que l’on pourra rencontrer c’est dans la gestion des fichiers de configuration.&lt;/p&gt;

&lt;p&gt;Je vais essayer d’exposer dans cet article comment j’ai réussi à gérer +/- efficacement (en tout cas pour moi) les fichiers de configuration dans les charts HELM.&lt;figure class=&quot;wp-block-gallery columns-1 is-cropped&quot;&gt;&lt;/figure&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/images/2021/01/loik-marras-sq0l3spwlhi-unsplash.jpg&quot; alt=&quot;helm&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;les-config-maps-et-secrets&quot;&gt;Les config maps et secrets&lt;/h2&gt;

&lt;p&gt;Logiquement dans ce type d’architecture, les &lt;a href=&quot;https://kubernetes.io/docs/concepts/configuration/configmap/&quot;&gt;configmaps&lt;/a&gt; et &lt;a href=&quot;https://kubernetes.io/docs/concepts/configuration/secret/&quot;&gt;secrets&lt;/a&gt; permettent le chargement des variables d’environnement et autres mots de passe. Cependant si vous utilisez certains frameworks qui nécessitent des fichiers de configuration, vous devrez charger les fichiers dans des volumes. Pour ces derniers, les volumes n’ont pas besoin d’être persistents.&lt;/p&gt;

&lt;p&gt;Par exemple dans la configuration de votre &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;deployment&lt;/code&gt;, vous pourrez configurer le montage d’un volume de la manière suivante:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;volumeMounts&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/config&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;configuration-volume&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;readOnly&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
            &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;mountPath&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/secrets&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;secret-volume&lt;/span&gt;
              &lt;span class=&quot;na&quot;&gt;readOnly&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;true&lt;/span&gt;
      &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
      &lt;span class=&quot;na&quot;&gt;volumes&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;configMap&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;defaultMode&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;420&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;configuration&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;configuration-volume&lt;/span&gt;
        &lt;span class=&quot;pi&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;secret-volume&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;secret&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;defaultMode&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;420&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;secretName&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;secrets&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pour intégrer un fichier binaire, on pourra le faire de la manière suivante dans le template HELM:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Definition of secrets&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Secret&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Opaque&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;# Inclusion of binary configuration files&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;my_keystore_jks  .Files.Get &quot;secrets/my_keystore.jks&quot; | b64enc }}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vous pouvez définir les fichiers directement dans vos configmaps. Cependant, si vos fichiers sont volumineux, vous aurez du mal à les maintenir. Personnellement, j’opte pour mettre les fichiers de configuration à coté et les charger dans le configmap.&lt;/p&gt;

&lt;p&gt;On pourra procéder de la manière suivante:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ConfigMap&lt;/span&gt;
&lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;

&lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;my_conf&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;   &lt;span class=&quot;pi&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;- (.Files.Glob &quot;conf/*&quot;).AsConfig | nindent 2&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}}&lt;/span&gt; 

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;livrables-agnostiques&quot;&gt;Livrables agnostiques&lt;/h2&gt;

&lt;p&gt;Une bonne pratique de développement logiciel est d’externaliser la configuration de vos environnements (ex. l’URL JDBC de la base de données) des livrables. Les charts HELM n’échappent à la règle.&lt;/p&gt;

&lt;p&gt;On peut stocker la configuration de chaque environnement dans le chart, mais dans ce cas, on perdra beaucoup de souplesse lors des mises à jour des propriétés et cela nous imposera une nouvelle version.&lt;/p&gt;

&lt;p&gt;On a plusieurs niveaux d’externalisation. Le premier est dans le chart. Vous pouvez externaliser les différentes valeurs dans le fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;values.yml&lt;/code&gt;. Ci dessous un exemple avec un &lt;a href=&quot;https://kubernetes.io/docs/tasks/run-application/horizontal-pod-autoscale/&quot;&gt;autoscaler&lt;/a&gt;:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;autoscaling/v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;HorizontalPodAutoscaler&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;spec&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;maxReplicas&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;pi&quot;&gt;{{&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;.Values.myapp.maxReplicaCount&lt;/span&gt; &lt;span class=&quot;pi&quot;&gt;}}&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;minReplicas&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;.Values.myapp.minReplicaCount }}&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;scaleTargetRef&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;apps/v1&lt;/span&gt;
    &lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;Deployment&lt;/span&gt;
   &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;targetCPUUtilizationPercentage&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;.Values.myapp.replicationThreesold }}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Les valeurs sont décrites comme suit:&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;myapp&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;minReplicaCount&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;2&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;maxReplicaCount&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;6&quot;&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;replicationThreesold&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;80&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Pour externaliser les valeurs d’environnement, vous pourrez donc externaliser un autre fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;values.yml&lt;/code&gt; qui sera appliqué au déploiement. Les valeurs de ce dernier surchargeront les valeurs définies dans le chart.&lt;br /&gt;
Il est important de noter également que les données présentes dans les fichiers de configuration (ex. fichier &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;application.properties&lt;/code&gt;) peuvent être « variabilisées » et surchargées par le même mécanisme. Vous aurez à utiliser la commande &lt;a href=&quot;https://helm.sh/docs/chart_template_guide/functions_and_pipelines/&quot;&gt;tpl&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-yaml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;na&quot;&gt;apiVersion&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;v1&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;kind&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;ConfigMap&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;metadata&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;configuration&lt;/span&gt;
  &lt;span class=&quot;na&quot;&gt;labels&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;pi&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;]&lt;/span&gt;
&lt;span class=&quot;na&quot;&gt;data&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt;
  &lt;span class=&quot;s&quot;&gt;application.properties&lt;/span&gt;&lt;span class=&quot;pi&quot;&gt;:&lt;/span&gt; 
    &lt;span class=&quot;pi&quot;&gt;|-&lt;/span&gt; 
    &lt;span class=&quot;s&quot;&gt;{{ tpl (.Files.Get &quot;conf/application.properties&quot;) . | nindent 4}} &lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;conclusion&quot;&gt;Conclusion&lt;/h2&gt;

&lt;p&gt;Vous l’aurez compris, les charts HELM n’échappent pas aux règles déjà connues de gestion des environnements et des livrables. Même si il y a quelques subtilités à connaître pour intégrer des fichiers de configuration par exemple, les grands principes restent les mêmes.&lt;/p&gt;</content><author><name>Alexandre Touret</name></author><summary type="html">Dès qu'on veut déployer des environnements Kubernetes, Helm devient une des solutions à considérer.Le déploiement des objets standards tels que deployment, autoscaler et autres se fait aisément car ces derniers ne changent pas d'un environnement à l'autre. Généralement on déploie la même infrastructure sur tous les environnements du développement à la production.</summary></entry></feed>