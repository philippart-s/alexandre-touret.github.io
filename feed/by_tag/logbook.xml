<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.9.2">Jekyll</generator><link href="https://blog.touret.info/feed/by_tag/logbook.xml" rel="self" type="application/atom+xml" /><link href="https://blog.touret.info/" rel="alternate" type="text/html" /><updated>2022-06-12T16:27:30+00:00</updated><id>https://blog.touret.info/feed/by_tag/logbook.xml</id><title type="html">blog.touret.info</title><subtitle>Mon blog personnel. J'y expose mes derniers travaux et ma veille technologique. Au menu en vrac: Java, Kotlin, Maven, Docker, Cloud, Kubernetes, logiciels libres, Debian, Ubuntu, Gnu/Linux, des talks online et présentiels.</subtitle><author><name>Alexandre Touret</name></author><entry><title type="html">Tracer (facilement) les entrées sorties d’une API REST</title><link href="https://blog.touret.info/2018/12/01/tracer-facilement-les-entrees-sorties-dune-api-rest/" rel="alternate" type="text/html" title="Tracer (facilement) les entrées sorties d’une API REST" /><published>2018-12-01T14:51:50+00:00</published><updated>2018-12-01T14:51:50+00:00</updated><id>https://blog.touret.info/2018/12/01/tracer-facilement-les-entrees-sorties-dune-api-rest</id><content type="html" xml:base="https://blog.touret.info/2018/12/01/tracer-facilement-les-entrees-sorties-dune-api-rest/">&lt;p&gt;&lt;img src=&quot;/assets/images/2018/12/street_city_people_blackandwhite_bw_man_detail_project-248333-jpgd.jpeg&quot; alt=&quot;street_city&quot; class=&quot;align-center&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Il y a quelques jours, je cherchais comment tracer rapidement et simplement les entrées sorties d’une &lt;a href=&quot;https://fr.wikipedia.org/wiki/Representational_state_transfer&quot;&gt;API REST&lt;/a&gt; en appliquant quelques formatages, des filtres, et des insertions en base si besoin.&lt;/p&gt;

&lt;p&gt;Travaillant sur une stack &lt;a href=&quot;https://spring.io/projects/spring-boot&quot;&gt;SpringBoot&lt;/a&gt;, vous allez me dire : oui tu peux faire des filtres. Pour être franc, j’ai essayé d’ appliquer des &lt;a href=&quot;https://www.baeldung.com/spring-mvc-handlerinterceptor&quot;&gt;interceptor&lt;/a&gt; et &lt;a href=&quot;https://www.baeldung.com/spring-boot-add-filter&quot;&gt;filtres&lt;/a&gt; mais dans mon contexte, ça ne collait pas.&lt;/p&gt;

&lt;p&gt;Me voilà donc à la recherche d’une solution faisant le taff et qui soit peu intrusive dans mon contexte.&lt;/p&gt;

&lt;p&gt;J’ai trouvé par hasard au fil de mes lectures sur Stackoverflow le framework &lt;a href=&quot;https://github.com/zalando/logbook&quot;&gt;logbook&lt;/a&gt; réalisé par … Zalando ( et oui, ils ne font pas que des chaussures) en licence MIT. &lt;br /&gt;
Ce composant ne fait qu’une seule chose, mais il le fait bien !&lt;/p&gt;

&lt;p&gt;Il permet entre autres de s’intégrer dans une stack JAVA ( JAX-RS ou SpringMVC), de filtrer, récupérer les différentes informations des requêtes et réponses et enfin de formatter selon l’envie (ex. JSON).&lt;/p&gt;

&lt;p&gt;Voici un exemple de mise en œuvre dans un projet SpringBoot:&lt;/p&gt;

&lt;p&gt;Dans le  fichier pom.xml, ajouter cette dépendance:&lt;/p&gt;

&lt;div class=&quot;language-xml highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dependency&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;groupId&amp;gt;&lt;/span&gt;org.zalando&lt;span class=&quot;nt&quot;&gt;&amp;lt;/groupId&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;artifactId&amp;gt;&lt;/span&gt;logbook-spring-boot-starter&lt;span class=&quot;nt&quot;&gt;&amp;lt;/artifactId&amp;gt;&lt;/span&gt;
 &lt;span class=&quot;nt&quot;&gt;&amp;lt;version&amp;gt;&lt;/span&gt;1.11.2&lt;span class=&quot;nt&quot;&gt;&amp;lt;/version&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dependency&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dans une de vos classes &lt;a href=&quot;https://docs.spring.io/spring-framework/docs/current/javadoc-api/org/springframework/context/annotation/Configuration.html&quot;&gt;Configuration&lt;/a&gt;, définir la factory de Logbook&lt;/p&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nd&quot;&gt;@Bean&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Logbook&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;createLogBook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// too easy : return Logbook.create();&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Logbook&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;builder&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
                  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;condition&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;Conditions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;requestTo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/helloworld&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
                  &lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;formatter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;JsonHttpLogFormatter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()).&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;();&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Dans mon cas j’ai fait un filtre en n’incluant que l’ API /helloworld et j’ai formatté en JSON.&lt;br /&gt;
On peut également modifier le processus d’écriture pour ne pas écrire dans un fichier mais en base par ex.&lt;/p&gt;

&lt;p&gt;Ensuite, j’ai ajouté la configuration du logger dans le fichier application.properties&lt;/p&gt;

&lt;div class=&quot;language-ini highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;err&quot;&gt;logging.level.org.zalando.logbook:TRACE&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Et voila !&lt;/p&gt;

&lt;p&gt;Dans la console, lors d’un appel ou d’une réponse à mon API, j’ai le message suivant :&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;018-12-01 15:14:18.373 TRACE 3605 &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;nio-8080-exec-1] org.zalando.logbook.Logbook              : &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;origin&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;remote&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;request&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;correlation&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;c6b345013835273f&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;protocol&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;HTTP/1.1&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;remote&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;method&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;GET&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;uri&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;http://127.0.0.1:8080/helloworld&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;headers&quot;&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;accept&quot;&lt;/span&gt;:[&lt;span class=&quot;s2&quot;&gt;&quot;/&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;host&quot;&lt;/span&gt;:[&lt;span class=&quot;s2&quot;&gt;&quot;127.0.0.1:8080&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;user-agent&quot;&lt;/span&gt;:[&lt;span class=&quot;s2&quot;&gt;&quot;curl/7.52.1&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]}}&lt;/span&gt;
2018-12-01 15:14:18.418 TRACE 3605 &lt;span class=&quot;nt&quot;&gt;---&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;nio-8080-exec-1] org.zalando.logbook.Logbook              : &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;origin&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;local&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;type&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;response&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;correlation&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;c6b345013835273f&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;duration&quot;&lt;/span&gt;:48,&lt;span class=&quot;s2&quot;&gt;&quot;protocol&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;HTTP/1.1&quot;&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;status&quot;&lt;/span&gt;:200,&lt;span class=&quot;s2&quot;&gt;&quot;headers&quot;&lt;/span&gt;:&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Content-Length&quot;&lt;/span&gt;:[&lt;span class=&quot;s2&quot;&gt;&quot;11&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;Content-Type&quot;&lt;/span&gt;:[&lt;span class=&quot;s2&quot;&gt;&quot;text/plain;charset=UTF-8&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;Date&quot;&lt;/span&gt;:[&lt;span class=&quot;s2&quot;&gt;&quot;Sat, 01 Dec 2018 14:14:18 GMT&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]}&lt;/span&gt;,&lt;span class=&quot;s2&quot;&gt;&quot;body&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;Hello world&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Vous remarquerez que les requêtes / réponses peuvent désormais être associés grâce à un identifiant de corrélation. On peut facilement déterminer le temps de traitement d’une requête ou encore faciliter les recherches.&lt;/p&gt;

&lt;p&gt;Vous trouverez tout le code dans &lt;a href=&quot;https://github.com/littlewing/demo-logbook&quot;&gt;ce repo github&lt;/a&gt;.&lt;/p&gt;</content><author><name>Alexandre Touret</name></author><category term="logbook" /><category term="planetlibre" /><category term="spring" /><category term="springboot" /><summary type="html"></summary></entry></feed>